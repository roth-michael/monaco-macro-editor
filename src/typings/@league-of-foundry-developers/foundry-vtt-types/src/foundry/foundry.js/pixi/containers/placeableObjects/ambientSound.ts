
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/pixi/containers/placeableObjects/ambientSound.d.ts",
      "import type { ConfiguredDocumentClass } from '../../../../../types/helperTypes';\n\ndeclare global {\n  /**\n   * An AmbientSound is an implementation of PlaceableObject which represents a dynamic audio source within the Scene.\n   *\n   * @example\n   * ```typescript\n   * AmbientSound.create({\n   *   t: \"l\",\n   *   x: 1000,\n   *   y: 1000,\n   *   radius: 60,\n   *   easing: true,\n   *   path: \"sounds/audio-file.mp3\",\n   *   repeat: true,\n   *   volume: 0.4\n   * });\n   * ```\n   */\n  class AmbientSound extends PlaceableObject<InstanceType<ConfiguredDocumentClass<typeof AmbientSoundDocument>>> {\n    /**\n     * The Howl instance used to play this AmbientSound effect\n     */\n    howl: any;\n\n    /**\n     * The Howl sound ID of the playing instance of this sound\n     */\n    howlId?: number;\n\n    /**\n     * Create an audio helper instance to use for the Ambient Sound\n     */\n    protected _createHowl(): any;\n\n    /** @override */\n    static get embeddedName(): 'AmbientSound';\n\n    /**\n     * @remarks\n     * Not implemented for AmbientSound\n     */\n    get bounds(): never;\n\n    /**\n     * A convenience accessor for the sound type\n     */\n    get type(): 'l' | 'g';\n\n    /**\n     * A convenience accessor for the sound radius in pixels\n     */\n    get radius(): number;\n\n    /**\n     * Toggle playback of the sound depending on whether or not it is audible\n     * @param isAudible - Is the sound audible?\n     * @param volume    - The target playback volume\n     * @param fade      - Whether to fade the volume from its previous level\n     */\n    play(isAudible: boolean, volume?: number, { fade }?: { fade?: boolean }): void | number;\n\n    /**\n     * @override\n     * @remarks\n     * Returns void\n     */\n    clear(): any;\n\n    /** @override */\n    draw(): Promise<this>;\n\n    /**\n     * Draw the graphical preview of the audio source area of effect\n     */\n    protected drawField(): PIXI.Container;\n\n    /**\n     * Draw the ControlIcon for the AmbientLight\n     */\n    protected _drawControlIcon(): ControlIcon;\n\n    /** @override */\n    refresh(): this;\n\n    /**\n     * Compute the field-of-vision for an object, determining its effective line-of-sight and field-of-vision polygons\n     * @returns An object containing the rays, LOS polygon, and FOV polygon for the light\n     */\n    computeFOV(): {\n      fov: PIXI.Polygon | null;\n      los: PIXI.Polygon | null;\n      rays: Array<Ray> | null;\n    };\n\n    /** @override */\n    protected _onCreate(): void;\n\n    /** @override */\n    protected _onUpdate(data: AmbientSound.Data): void;\n\n    /** @override */\n    protected _onDelete(): void;\n  }\n\n  namespace AmbientSound {\n    interface Data {\n      easing: boolean;\n      path: string;\n      radius: number;\n      repeat: boolean;\n      type: 'l' | 'g';\n      volume: number;\n      x: number;\n      y: number;\n    }\n  }\n}\n"
    ]
  