
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/config.d.ts",
      "import { DocumentConstructor, PlaceableObjectConstructor } from '../../types/helperTypes';\nimport DatabaseBackend from '../common/abstract/backend.mjs';\n\ntype ConfiguredDocumentClassOrDefault<Fallback extends DocumentConstructor> =\n  Fallback['metadata']['name'] extends keyof DocumentClassConfig\n    ? DocumentClassConfig[Fallback['metadata']['name']]\n    : Fallback;\n\ntype ConfiguredObjectClassOrDefault<Fallback extends PlaceableObjectConstructor> =\n  Fallback['embeddedName'] extends keyof PlaceableObjectClassConfig\n    ? PlaceableObjectClassConfig[Fallback['embeddedName']]\n    : Fallback;\n\ndeclare global {\n  /**\n   * This interface is used to configure the used document classes at a type\n   * level. Module and system authors should use declaration merging to provide\n   * the types of their configured document classes. It is extremely important\n   * that this is kept in sync with the configuration that actually happens at\n   * runtime.\n   *\n   * @example\n   * ```typescript\n   * // myActor.ts\n   * class MyActor extends Actor {}\n   *\n   * // entryPoint.ts\n   * import { MyActor } from './myActor'\n   *\n   * hooks.once('init', () => {\n   *   CONFIG.Actor.documentClass = typeof MyActor;\n   * });\n   *\n   * declare global {\n   *   interface DocumentClassConfig {\n   *     Actor: typeof MyActor\n   *   }\n   * }\n   * ```\n   */\n\n  //eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface DocumentClassConfig {}\n\n  /**\n   * This interface is used to configure the used object classes at a type\n   * level. Module and system authors should use declaration merging to provide\n   * the types of their configured object classes. It is extremely important\n   * that this is kept in sync with the configuration that actually happens at\n   * runtime.\n   *\n   * @example\n   * ```typescript\n   * // myToken.ts\n   * class MyToken extends Token {}\n   *\n   * // entryPoint.ts\n   * import { MyToken } from './myToken'\n   *\n   * Hooks.once('init', () => {\n   *   CONFIG.Token.objectClass = MyToken;\n   * });\n   *\n   * declare global {\n   *   interface PlaceableObjectClassConfig {\n   *     Token: typeof MyToken;\n   *   }\n   * }\n   * ```\n   */\n\n  //eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface PlaceableObjectClassConfig {}\n\n  /**\n   * This interface together with {@link SourceConfig} is used to configure the\n   * types of the `data`  and `data._source` properties of the\n   * {@link foundry.documents.BaseActor} and {@link foundry.documents.BaseItem}\n   * classes. System authors should use declaration merging to provide the types\n   * that match their `template.json` file. It is also very important for these\n   * types to stay in sync with the `template.json` file, otherwise unexpected\n   * runtime errors might appear.\n   *\n   * @example\n   * ```typescript\n   * interface ArmorDataSourceData {\n   *   armorValue: number;\n   * }\n   *\n   * interface ArmorDataSource {\n   *   type: 'armor';\n   *   data: ArmorDataSourceData;\n   * }\n   *\n   * interface WeaponDataSourceData {\n   *   damagePerHit: number;\n   *   attackSpeed: number;\n   * }\n   *\n   * interface WeaponDataSource {\n   *   type: 'weapon';\n   *   data: WeaponDataSourceData;\n   * }\n   *\n   * interface ArmorDataPropertiesData extends ArmorDataSourceData {\n   *   weight: number;\n   * }\n   *\n   * interface ArmorDataProperties {\n   *   type: 'armor';\n   *   data: ArmorDataPropertiesData;\n   * }\n   *\n   * interface WeaponDataPropertiesData extends WeaponDataSourceData {\n   *   damage: number;\n   * }\n   *\n   * interface WeaponDataProperties {\n   *   type: 'weapon';\n   *   data: WeaponDataPropertiesData;\n   * }\n   *\n   * type MyItemDataSource = ArmorDataSource | WeaponDataSource;\n   * type MyItemDataProperties = ArmorDataProperties | WeaponDataProperties;\n   *\n   * declare global {\n   *   interface DataConfig {\n   *     Item: MyItemDataProperties;\n   *   }\n   *\n   *   interface SourceConfig {\n   *     Item: MyItemDataSource;\n   *   }\n   * }\n   * const item = await Item.create({\n   *   name: 'Axe',\n   *   type: 'weapon',\n   *   attackSpeed: 1,\n   *   damage: 5\n   * });\n   *\n   * if(item.data.type === 'weapon') {\n   *   const damage: number = item.data.data.damage;\n   * }\n   *\n   * if(item.data._source.type === 'armor') {\n   *   const armorValue = item.data._source.data.armorValue;\n   * }\n   * ```\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface DataConfig {}\n\n  /**\n   * @see {@link DataConfig}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface SourceConfig {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface FlagConfig {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface WebRTCConfig {}\n\n  /**\n   * Runtime configuration settings for Foundry VTT which exposes a large number of variables which determine how\n   * aspects of the software behaves.\n   *\n   * Unlike the CONST analog which is frozen and immutable, the CONFIG object may be updated during the course of a\n   * session or modified by system and module developers to adjust how the application behaves.\n   */\n  interface CONFIG {\n    /**\n     * Configure debugging flags to display additional information\n     */\n    debug: {\n      /**\n       * @defaultValue `false`\n       */\n      dice: boolean;\n\n      /**\n       * @defaultValue `false`\n       */\n      documents: boolean;\n\n      /**\n       * @defaultValue `false`\n       */\n      fog: boolean;\n\n      /**\n       * @defaultValue `false`\n       */\n      hooks: boolean;\n\n      /**\n       * @defaultValue `false`\n       */\n      sight: boolean;\n\n      /**\n       * @defaultValue `false`\n       */\n      sightRays: boolean;\n\n      /**\n       * @defaultValue `false`\n       */\n      av: boolean;\n\n      /**\n       * @defaultValue `false`\n       */\n      avclient: boolean;\n\n      /**\n       * @defaultValue `false`\n       */\n      mouseInteraction: boolean;\n\n      /**\n       * @defaultValue `false`\n       */\n      time: boolean;\n    };\n\n    /**\n     * Configure the DatabaseBackend used to perform Document operations\n     * @defaultValue `new ClientDatabaseBackend()`\n     */\n    DatabaseBackend: DatabaseBackend; // TODO: ClientDatabaseBackend\n\n    /**\n     * Configuration for the Actor document\n     */\n    Actor: {\n      /**\n       * @defaultValue `Actor`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Actor>;\n\n      /**\n       * @defaultValue `Actors`\n       */\n      collection: ConstructorOf<Actors>;\n\n      /**\n       * @defaultValue `{}`\n       */\n      sheetClasses: EntitySheetConfig.SheetClasses;\n\n      /**\n       * @defaultValue `'fas fa-user'`\n       */\n      sidebarIcon: string;\n\n      /**\n       * @defaultValue `{}`\n       */\n      typeLabels: Partial<Record<string, string>>;\n    };\n\n    /**\n     * Configuration for the ChatMessage document\n     */\n    ChatMessage: {\n      /**\n       * @defaultValue `ChatMessage`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof ChatMessage>;\n      /**\n       * @defaultValue `Messages`\n       */\n      collection: ConstructorOf<Messages>;\n\n      /**\n       * @defaultValue `'templates/sidebar/chat-message.html'`\n       */\n      template: string;\n\n      /**\n       * @defaultValue `'fas fa-comments'`\n       */\n      sidebarIcon: string;\n\n      /**\n       * @defaultValue `100`\n       */\n      batchSize: number;\n    };\n\n    /**\n     * Configuration for the Combat document\n     */\n    Combat: {\n      /**\n       * @defaultValue `Combat`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Combat>;\n\n      /**\n       * @defaultValue `CombatEncounters`\n       */\n      collection: ConstructorOf<CombatEncounters>;\n\n      /**\n       * @defaultValue `'dead'`\n       */\n      defeatedStatusId: string;\n\n      /**\n       * @defaultValue `'fas fa-fist-raised'`\n       */\n      sidebarIcon: string;\n\n      initiative: {\n        /**\n         * @defaultValue `null`\n         */\n        formula: string | null;\n\n        /**\n         * @defaultValue `2`\n         */\n        decimals: number;\n      };\n    };\n\n    /**\n     * Configuration for dice rolling behaviors in the Foundry VTT client\n     */\n    Dice: {\n      /**\n       * @defaultValue `[Die, FateDie]`\n       */\n      types: Array<ConstructorOf<DiceTerm>>;\n\n      rollModes: {\n        /**\n         * @defaultValue `'CHAT.RollPublic'`\n         */\n        roll: string;\n\n        /**\n         * @defaultValue `'CHAT.RollPrivate'`\n         */\n        gmroll: string;\n\n        /**\n         * @defaultValue `CHAT.RollBlind'`\n         */\n        blindroll: string;\n\n        /**\n         * @defaultValue `'CHAT.RollSelf'`\n         */\n        selfroll: string;\n      } & Partial<Record<string, string>>;\n\n      /**\n       * @defaultValue `[Roll]`\n       */\n      rolls: Array<ConstructorOf<Roll>>;\n\n      /**\n       * @defaultValue\n       * ```typescript\n       * {\n       *   DiceTerm: typeof DiceTerm,\n       *   MathTerm: typeof MathTerm,\n       *   NumericTerm: typeof NumericTerm,\n       *   OperatorTerm: typeof OperatorTerm,\n       *   ParentheticalTerm: typeof ParentheticalTerm,\n       *   PoolTerm: typeof PoolTerm,\n       *   StringTerm: typeof StringTerm\n       * }\n       * ```\n       */\n      termTypes: Record<string, ConstructorOf<RollTerm>>;\n\n      terms: {\n        c: typeof Coin;\n        d: typeof Die;\n        f: typeof FateDie;\n      } & Partial<Record<string, ConstructorOf<DiceTerm>>>;\n\n      /**\n       * @defaultValue `MersenneTwister.random`\n       */\n      randomUniform: () => number;\n    };\n\n    /**\n     * Configuration for the FogExploration document\n     */\n    FogExploration: {\n      /**\n       * @defaultValue `FogExploration`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof FogExploration>;\n\n      /**\n       * @defaultValue `FogExplorations`\n       */\n      collection: ConstructorOf<FogExplorations>;\n    };\n\n    /**\n     * Configuration for the Folder entity\n     */\n    Folder: {\n      /**\n       * @defaultValue `Folder`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Folder>;\n\n      /**\n       * @defaultValue `Folders`\n       */\n      collection: ConstructorOf<Folders>;\n\n      /**\n       * @defaultValue `FolderConfig`\n       */\n      sheetClass: ConstructorOf<FolderConfig>;\n    };\n\n    /**\n     * Configuration for the default Item entity class\n     */\n    Item: {\n      /**\n       * @defaultValue `Item`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Item>;\n\n      /**\n       * @defaultValue `Items`\n       */\n      collection: ConstructorOf<Items>;\n\n      /**\n       * @defaultValue `{}`\n       */\n      sheetClasses: EntitySheetConfig.SheetClasses;\n\n      /**\n       * @defaultValue `'fas fa-suitcase'`\n       */\n      sidebarIcon: string;\n\n      /**\n       * defaultValue `{}`\n       */\n      typeLabels: Partial<Record<string, string>>;\n    };\n\n    /**\n     * Configuration for the JournalEntry entity\n     */\n    JournalEntry: {\n      /**\n       * @defaultValue `JournalEntry`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof JournalEntry>;\n\n      /**\n       * @defaultValue `Journal`\n       */\n      collection: ConstructorOf<Journal>;\n\n      /**\n       * @defaultValue `JournalSheet`\n       */\n      sheetClass: ConstructorOf<JournalSheet>;\n\n      noteIcons: {\n        /**\n         * @defaultValue `'icons/svg/anchor.svg'`\n         */\n        Anchor: string;\n\n        /**\n         * @defaultValue `'icons/svg/barrel.svg'`\n         */\n        Barrel: string;\n\n        /**\n         * @defaultValue `'icons/svg/book.svg'`\n         */\n        Book: string;\n\n        /**\n         * @defaultValue `'icons/svg/bridge.svg'`\n         */\n        Bridge: string;\n\n        /**\n         * @defaultValue `'icons/svg/cave.svg'`\n         */\n        Cave: string;\n\n        /**\n         * @defaultValue `'icons/svg/castle.svg`\n         */\n        Castle: string;\n\n        /**\n         * @defaultValue `'icons/svg/chest.svg'`\n         */\n        Chest: string;\n\n        /**\n         * @defaultValue `'icons/svg/city.svg'`\n         */\n        City: string;\n\n        /**\n         * @defaultValue `'icons/svg/coins.svg'`\n         */\n        Coins: string;\n\n        /**\n         * @defaultValue `'icons/svg/fire.svg'`\n         */\n        Fire: string;\n\n        /**\n         * @defaultValue `'icons/svg/hanging-sign.svg'`\n         */\n        'Hanging Sign': string;\n\n        /**\n         * @defaultValue `'icons/svg/house.svg'`\n         */\n        House: string;\n\n        /**\n         * @defaultValue `'icons/svg/mountain.svg'`\n         */\n        Mountain: string;\n\n        /**\n         * @defaultValue `'icons/svg/oak.svg'`\n         */\n        'Oak Tree': string;\n\n        /**\n         * @defaultValue `'icons/svg/obelisk.svg'`\n         */\n        Obelisk: string;\n\n        /**\n         * @defaultValue `'icons/svg/pawprint.svg'`\n         */\n        Pawprint: string;\n\n        /**\n         * @defaultValue `'icons/svg/ruins.svg'`\n         */\n        Ruins: string;\n\n        /**\n         * @defaultValue `'icons/svg/tankard.svg'`\n         */\n        Tankard: string;\n\n        /**\n         * @defaultValue `'icons/svg/temple.svg'`\n         */\n        Temple: string;\n\n        /**\n         * @defaultValue `'icons/svg/tower.svg'`\n         */\n        Tower: string;\n\n        /**\n         * @defaultValue `'icons/svg/trap.svg'`\n         */\n        Trap: string;\n\n        /**\n         * @defaultValue `'icons/svg/skull.svg'`\n         */\n        Skull: string;\n\n        /**\n         * @defaultValue `'icons/svg/statue.svg'`\n         */\n        Statue: string;\n\n        /**\n         * @defaultValue `'icons/svg/sword.svg'`\n         */\n        Sword: string;\n\n        /**\n         * @defaultValue `'icons/svg/village.svg'`\n         */\n        Village: string;\n\n        /**\n         * @defaultValue `'icons/svg/waterfall.svg'`\n         */\n        Waterfall: string;\n        /**\n         * @defaultValue `'icons/svg/windmill.svg'`\n         */\n        Windmill: string;\n      } & Partial<Record<string, string>>;\n\n      /**\n       * @defaultValue `'fas fa-book-open'`\n       */\n      sidebarIcon: string;\n    };\n\n    /**\n     * Configuration for the Macro entity\n     */\n    Macro: {\n      /**\n       * @defaultValue `Macro`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Macro>;\n\n      /**\n       * @defaultValue `Macros`\n       */\n      collection: ConstructorOf<Macros>;\n\n      /**\n       * @defaultValue `MacroConfig`\n       */\n      sheetClass: ConstructorOf<MacroConfig>;\n\n      /**\n       * @defaultValue `'fas fa-terminal'`\n       */\n      sidebarIcon: string;\n    };\n\n    /**\n     * Configuration for the default Playlist entity class\n     */\n    Playlist: {\n      /**\n       * @defaultValue `Playlist`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Playlist>;\n\n      /**\n       * @defaultValue `Playlists`\n       */\n      collection: ConstructorOf<Playlists>;\n\n      /**\n       * @defaultValue `PlaylistConfig`\n       */\n      sheetClass: ConstructorOf<PlaylistConfig>;\n\n      /**\n       * @defaultValue `'fas fa-music'`\n       */\n      sidebarIcon: string;\n\n      /**\n       * @defaultValue `20`\n       */\n      autoPreloadSeconds: number;\n    };\n\n    /**\n     * Configuration for RollTable random draws\n     */\n    RollTable: {\n      /**\n       * @defaultValue `RollTable`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof RollTable>;\n\n      /**\n       * @defaultValue `RollTables`\n       */\n      collection: ConstructorOf<RollTables>;\n\n      /**\n       * @defaultValue `RollTableConfig`\n       */\n      sheetClass: ConstructorOf<RollTableConfig>;\n\n      /**\n       * @defaultValue `'fas fa-th-list'`\n       */\n      sidebarIcon: string;\n\n      /**\n       * @defaultValue `'icons/svg/d20-black.svg'`\n       */\n      resultIcon: string;\n\n      /**\n       * @defaultValue `'templates/dice/table-result.html'`\n       */\n      resultTemplate: string;\n    };\n\n    /**\n     * Configuration for the default Scene entity class\n     */\n    Scene: {\n      /**\n       * @defaultValue `Scene`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Scene>;\n\n      /**\n       * @defaultValue `Scenes`\n       */\n      collection: ConstructorOf<Scenes>;\n\n      /**\n       * @defaultValue `SceneConfig`\n       */\n      sheetClass: ConstructorOf<SceneConfig>;\n\n      /**\n       * @defaultValue `'fas fa-map'`\n       */\n      sidebarIcon: string;\n    };\n\n    Setting: {\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Setting>;\n      collection: ConstructorOf<WorldSettings>;\n    };\n\n    /**\n     * Configuration for the User entity, it's roles, and permissions\n     */\n    User: {\n      /**\n       * @defaultValue `User`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof User>;\n\n      /**\n       * @defaultValue `Users`\n       */\n      collection: ConstructorOf<Users>;\n\n      /**\n       * @defaultValue `UserConfig`\n       */\n      sheetClass: ConstructorOf<UserConfig>;\n    };\n\n    /**\n     * Configuration settings for the Canvas and its contained layers and objects\n     */\n    Canvas: {\n      /**\n       * @defaultValue `8`\n       */\n      blurStrength: number;\n\n      /**\n       * @defaultValue `0x242448`\n       */\n      darknessColor: number;\n\n      /**\n       * @defaultValue `0.4`\n       */\n      darknessLightPenalty: number;\n\n      /**\n       * @defaultValue `0xeeeeee`\n       */\n      daylightColor: number;\n\n      dispositionColors: {\n        /**\n         * @defaultValue `0xe72124`\n         */\n        HOSTILE: number;\n\n        /**\n         * @defaultValue `0xf1d836`\n         */\n        NEUTRAL: number;\n\n        /**\n         * @defaultValue `0x43dfdf`\n         */\n        FRIENDLY: number;\n\n        /**\n         * @defaultValue `0x555555`\n         */\n        INACTIVE: number;\n\n        /**\n         * @defaultValue `0x33bc4e`\n         */\n        PARTY: number;\n\n        /**\n         * @defaultValue `0xff9829`\n         */\n        CONTROLLED: number;\n      };\n\n      /**\n       * @defaultValue `0x7f7f7f`\n       */\n      exploredColor: number;\n\n      /**\n       * @defaultValue `0x000000`\n       */\n      unexploredColor: number;\n\n      layers: {\n        /**\n         * @defaultValue `BackgroundLayer`\n         */\n        background: ConstructorOf<BackgroundLayer>;\n\n        /**\n         * @defaultValue `DrawingsLayer`\n         */\n        drawings: ConstructorOf<DrawingsLayer>;\n\n        /**\n         * @defaultValue `GridLayer`\n         */\n        grid: ConstructorOf<GridLayer>;\n\n        /**\n         * @defaultValue `WallsLayer`\n         */\n        walls: ConstructorOf<WallsLayer>;\n\n        /**\n         * @defaultValue `TemplateLayer`\n         */\n        templates: ConstructorOf<TemplateLayer>;\n\n        /**\n         * @defaultValue `NotesLayer`\n         */\n        notes: ConstructorOf<NotesLayer>;\n\n        /**\n         * @defaultValue `TokenLayer`\n         */\n        tokens: ConstructorOf<TokenLayer>;\n\n        /**\n         * @defaultValue `ForegroundLayer`\n         */\n        foreground: ConstructorOf<ForegroundLayer>;\n\n        /**\n         * @defaultValue `SoundsLayer`\n         */\n        sounds: ConstructorOf<SoundsLayer>;\n\n        /**\n         * @defaultValue `LightingLayer`\n         */\n        lighting: ConstructorOf<LightingLayer>;\n\n        /**\n         * @defaultValue `SightLayer`\n         */\n        sight: ConstructorOf<SightLayer>;\n\n        /**\n         * @defaultValue `EffectsLayer`\n         */\n        effects: ConstructorOf<EffectsLayer>;\n\n        /**\n         * @defaultValue `ControlsLayer`\n         */\n        controls: ConstructorOf<ControlsLayer>;\n      };\n\n      lightLevels: {\n        /**\n         * @defaultValue `0`\n         */\n        dark: number;\n\n        /**\n         * @defaultValue `0.5`\n         */\n        dim: number;\n\n        /**\n         * @defaultValue `1.0`\n         */\n        bright: number;\n      };\n\n      /**\n       * @defaultValue `0xb86200`\n       */\n      normalLightColor: number;\n\n      /**\n       * @defaultValue `3.0`\n       */\n      maxZoom: number;\n\n      /**\n       * @defaultValue `4`\n       */\n      objectBorderThickness: number;\n\n      lightAnimations: {\n        torch: {\n          /**\n           * @defaultValue `'LIGHT.AnimationTorch'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue PointSource.prototype.animateTorch\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `TorchIlluminationShader`\n           */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /**\n           * @defaultValue `TorchColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        pulse: {\n          /**\n           * @defaultValue `'LIGHT.AnimationPulse'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animatePulse`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `PulseIlluminationShader`\n           */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /**\n           * @defaultValue `PulseColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        chroma: {\n          /**\n           * @defaultValue `'LIGHT.AnimationChroma'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `ChromaColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        wave: {\n          /**\n           * @defaultValue `'LIGHT.AnimationWave'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `WaveIlluminationShader`\n           */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /**\n           * @defaultValue `WaveColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        fog: {\n          /**\n           * @defaultValue `'LIGHT.AnimationFog'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `FogColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        sunburst: {\n          /**\n           * @defaultValue `'LIGHT.AnimationSunburst'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `SunburstIlluminationShader`\n           */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /**\n           * @defaultValue `SunburstColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        dome: {\n          /**\n           * @defaultValue `'LIGHT.AnimationLightDome'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `LightDomeColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        emanation: {\n          /**\n           * @defaultValue `'LIGHT.AnimationEmanation'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `EmanationColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        hexa: {\n          /**\n           * @defaultValue `'LIGHT.AnimationHexaDome';`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `HexaDomeColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        ghost: {\n          /**\n           * @defaultValue `'LIGHT.AnimationGhostLight'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `GhostLightIlluminationShader`\n           */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n\n          /**\n           * @defaultValue `GhostLightColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        energy: {\n          /**\n           * @defaultValue `'LIGHT.AnimationEnergyField'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `EnergyFieldColorationShader`\n           */\n          colorationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        roiling: {\n          /**\n           * @defaultValue `'LIGHT.AnimationRoilingMass'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `RoilingIlluminationShader`\n           */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n        };\n\n        hole: {\n          /**\n           * @defaultValue `'LIGHT.AnimationBlackHole'`\n           */\n          label: string;\n\n          /**\n           * @defaultValue `PointSource.prototype.animateTime`\n           */\n          animation: PointSource.AnimationFunction;\n\n          /**\n           * @defaultValue `BlackHoleIlluminationShader`\n           */\n          illuminationShader: ConstructorOf<AbstractBaseShader>;\n        };\n      } & Partial<\n        Record<\n          string,\n          {\n            label: string;\n            animation: PointSource.AnimationFunction;\n            illuminationShader?: ConstructorOf<AbstractBaseShader>;\n            colorationShader?: ConstructorOf<AbstractBaseShader>;\n          }\n        >\n      >;\n    };\n\n    /**\n     * Configure the default Token text style so that it may be reused and overridden by modules\n     * @defaultValue\n     * ```typescript\n     * new PIXI.TextStyle({\n     *   fontFamily: 'Signika',\n     *   fontSize: 36,\n     *   fill: '#FFFFFF',\n     *   stroke: '#111111',\n     *   strokeThickness: 1,\n     *   dropShadow: true,\n     *   dropShadowColor: '#000000',\n     *   dropShadowBlur: 4,\n     *   dropShadowAngle: 0,\n     *   dropShadowDistance: 0,\n     *   align: 'center',\n     *   wordWrap: false,\n     *   padding: 1\n     * })\n     * ```\n     **/\n    canvasTextStyle: PIXI.TextStyle;\n\n    /**\n     * Available Weather Effects implementations\n     */\n    weatherEffects: {\n      /**\n       * @defaultValue `AutumnLeavesWeatherEffect`\n       */\n      leaves: ConstructorOf<SpecialEffect>;\n\n      /**\n       * @defaultValue `RainWeatherEffect`\n       */\n      rain: ConstructorOf<SpecialEffect>;\n\n      /**\n       * @defaultValue `SnowWeatherEffect`\n       */\n      snow: ConstructorOf<SpecialEffect>;\n    } & Partial<Record<string, ConstructorOf<SpecialEffect>>>;\n\n    /**\n     * The control icons used for rendering common HUD operations\n     */\n    controlIcons: {\n      /**\n       * @defaultValue `'icons/svg/combat.svg'`\n       */\n      combat: string;\n\n      /**\n       * @defaultValue `'icons/svg/cowled.svg'`\n       */\n      visibility: string;\n\n      /**\n       * @defaultValue `'icons/svg/aura.svg'`\n       */\n      effects: string;\n\n      /**\n       * @defaultValue `'icons/svg/padlock.svg'`\n       */\n      lock: string;\n\n      /**\n       * @defaultValue `'icons/svg/up.svg'`\n       */\n      up: string;\n\n      /**\n       * @defaultValue `'icons/svg/down.svg'`\n       */\n      down: string;\n\n      /**\n       * @defaultValue `'icons/svg/skull.svg'`\n       */\n      defeated: string;\n\n      /**\n       * @defaultValue `'icons/svg/light.svg'`\n       */\n      light: string;\n\n      /**\n       * @defaultValue `'icons/svg/light-off.svg'`\n       */\n      lightOff: string;\n\n      /**\n       * @defaultValue `'icons/svg/explosion.svg'`\n       */\n      template: string;\n\n      /**\n       * @defaultValue `'icons/svg/sound.svg'`\n       */\n      sound: string;\n\n      /**\n       * @defaultValue `'icons/svg/sound-off.svg'`\n       */\n      soundOff: string;\n\n      /**\n       * @defaultValue `'icons/svg/door-closed-outline.svg'`\n       */\n      doorClosed: string;\n\n      /**\n       * @defaultValue `'icons/svg/door-open-outline.svg'`\n       */\n      doorOpen: string;\n\n      /**\n       * @defaultValue `'icons/svg/door-secret-outline.svg'`\n       */\n      doorSecret: string;\n\n      /**\n       * @defaultValue `'icons/svg/door-locked-outline.svg'`\n       */\n      doorLocked: string;\n    } & Partial<Record<string, string>>;\n\n    /**\n     * Suggested font families that are displayed wherever a choice is presented\n     * @defaultValue `['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Times New Roman', 'Signika', 'Modesto Condensed']`\n     */\n    fontFamilies: string[];\n\n    /**\n     * The default font family used for text labels on the PIXI Canvas\n     * @defaultValue `'Signika'`\n     */\n    defaultFontFamily: string;\n\n    /**\n     * An array of status effect icons which can be applied to Tokens\n     * @defaultValue\n     * ```typescript\n     * [\n     *   {\n     *     id: 'dead';\n     *     label: 'EFFECT.StatusDead';\n     *     icon: 'icons/svg/skull.svg';\n     *   },\n     *   {\n     *     id: 'unconscious';\n     *     label: 'EFFECT.StatusUnconscious';\n     *     icon: 'icons/svg/unconscious.svg';\n     *   },\n     *   {\n     *     id: 'sleep';\n     *     label: 'EFFECT.StatusAsleep';\n     *     icon: 'icons/svg/sleep.svg';\n     *   },\n     *   {\n     *     id: 'stun';\n     *     label: 'EFFECT.StatusStunned';\n     *     icon: 'icons/svg/daze.svg';\n     *   },\n     *   {\n     *     id: 'prone';\n     *     label: 'EFFECT.StatusProne';\n     *     icon: 'icons/svg/falling.svg';\n     *   },\n     *   {\n     *     id: 'restrain';\n     *     label: 'EFFECT.StatusRestrained';\n     *     icon: 'icons/svg/net.svg';\n     *   },\n     *   {\n     *     id: 'paralysis';\n     *     label: 'EFFECT.StatusParalysis';\n     *     icon: 'icons/svg/paralysis.svg';\n     *   },\n     *   {\n     *     id: 'fly';\n     *     label: 'EFFECT.StatusFlying';\n     *     icon: 'icons/svg/wing.svg';\n     *   },\n     *   {\n     *     id: 'blind';\n     *     label: 'EFFECT.StatusBlind';\n     *     icon: 'icons/svg/blind.svg';\n     *   },\n     *   {\n     *     id: 'deaf';\n     *     label: 'EFFECT.StatusDeaf';\n     *     icon: 'icons/svg/deaf.svg';\n     *   },\n     *   {\n     *     id: 'silence';\n     *     label: 'EFFECT.StatusSilenced';\n     *     icon: 'icons/svg/silenced.svg';\n     *   },\n     *   {\n     *     id: 'fear';\n     *     label: 'EFFECT.StatusFear';\n     *     icon: 'icons/svg/terror.svg';\n     *   },\n     *   {\n     *     id: 'burning';\n     *     label: 'EFFECT.StatusBurning';\n     *     icon: 'icons/svg/fire.svg';\n     *   },\n     *   {\n     *     id: 'frozen';\n     *     label: 'EFFECT.StatusFrozen';\n     *     icon: 'icons/svg/frozen.svg';\n     *   },\n     *   {\n     *     id: 'shock';\n     *     label: 'EFFECT.StatusShocked';\n     *     icon: 'icons/svg/lightning.svg';\n     *   },\n     *   {\n     *     id: 'corrode';\n     *     label: 'EFFECT.StatusCorrode';\n     *     icon: 'icons/svg/acid.svg';\n     *   },\n     *   {\n     *     id: 'bleeding';\n     *     label: 'EFFECT.StatusBleeding';\n     *     icon: 'icons/svg/blood.svg';\n     *   },\n     *   {\n     *     id: 'disease';\n     *     label: 'EFFECT.StatusDisease';\n     *     icon: 'icons/svg/biohazard.svg';\n     *   },\n     *   {\n     *     id: 'poison';\n     *     label: 'EFFECT.StatusPoison';\n     *     icon: 'icons/svg/poison.svg';\n     *   },\n     *   {\n     *     id: 'radiation';\n     *     label: 'EFFECT.StatusRadiation';\n     *     icon: 'icons/svg/radiation.svg';\n     *   },\n     *   {\n     *     id: 'regen';\n     *     label: 'EFFECT.StatusRegen';\n     *     icon: 'icons/svg/regen.svg';\n     *   },\n     *   {\n     *     id: 'degen';\n     *     label: 'EFFECT.StatusDegen';\n     *     icon: 'icons/svg/degen.svg';\n     *   },\n     *   {\n     *     id: 'upgrade';\n     *     label: 'EFFECT.StatusUpgrade';\n     *     icon: 'icons/svg/upgrade.svg';\n     *   },\n     *   {\n     *     id: 'downgrade';\n     *     label: 'EFFECT.StatusDowngrade';\n     *     icon: 'icons/svg/downgrade.svg';\n     *   },\n     *   {\n     *     id: 'target';\n     *     label: 'EFFECT.StatusTarget';\n     *     icon: 'icons/svg/target.svg';\n     *   },\n     *   {\n     *     id: 'eye';\n     *     label: 'EFFECT.StatusMarked';\n     *     icon: 'icons/svg/eye.svg';\n     *   },\n     *   {\n     *     id: 'curse';\n     *     label: 'EFFECT.StatusCursed';\n     *     icon: 'icons/svg/sun.svg';\n     *   },\n     *   {\n     *     id: 'bless';\n     *     label: 'EFFECT.StatusBlessed';\n     *     icon: 'icons/svg/angel.svg';\n     *   },\n     *   {\n     *     id: 'fireShield';\n     *     label: 'EFFECT.StatusFireShield';\n     *     icon: 'icons/svg/fire-shield.svg';\n     *   },\n     *   {\n     *     id: 'coldShield';\n     *     label: 'EFFECT.StatusIceShield';\n     *     icon: 'icons/svg/ice-shield.svg';\n     *   },\n     *   {\n     *     id: 'magicShield';\n     *     label: 'EFFECT.StatusMagicShield';\n     *     icon: 'icons/svg/mage-shield.svg';\n     *   },\n     *   {\n     *     id: 'holyShield';\n     *     label: 'EFFECT.StatusHolyShield';\n     *     icon: 'icons/svg/holy-shield.svg';\n     *   }\n     * ]\n     * ```\n     */\n    statusEffects: { id: string; label: string; icon: string }[];\n\n    /**\n     * A mapping of core audio effects used which can be replaced by systems or mods\n     */\n    sounds: {\n      /**\n       * @defaultValue `'sounds/dice.wav'`\n       */\n      dice: string;\n\n      /**\n       * @defaultValue `'sounds/lock.wav'`\n       */\n      lock: string;\n\n      /**\n       * @defaultValue `'sounds/notify.wav'`\n       */\n      notification: string;\n\n      /**\n       * @defaultValue `'sounds/drums.wav'`\n       */\n      combat: string;\n    };\n\n    /**\n     * Define the set of supported languages for localization\n     * @defaultValue `{ en: 'English' }`\n     */\n    supportedLanguages: {\n      en: string;\n    } & Partial<Record<string, string>>;\n\n    /**\n     * Configuration for time tracking\n     */\n    time: {\n      /**\n       * @defaultValue `0`\n       */\n      turnTime: number;\n\n      /**\n       * @defaultValue `0`\n       */\n      roundTime: number;\n    };\n\n    /**\n     * Configuration for the ActiveEffect embedded document type\n     */\n    ActiveEffect: {\n      /**\n       * @defaultValue `ActiveEffect`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof ActiveEffect>;\n\n      /**\n       * @defaultValue `ActiveEffectConfig`\n       */\n      sheetClass: ConstructorOf<ActiveEffectConfig>;\n    };\n\n    /**\n     * Configuration for the TableResult embedded document type\n     */\n    TableResult: {\n      /**\n       * @defaultValue `TableResult`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof foundry.documents.BaseTableResult>; // TODO TableResult\n    };\n\n    /**\n     * Configuration for the ActiveEffect embedded document type\n     */\n    PlaylistSound: {\n      /**\n       * @defaultValue `PlaylistSound`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof foundry.documents.BasePlaylistSound>; // TODO PlaylistSound\n\n      /**\n       * @defaultValue `PlaylistSoundConfig`\n       */\n      sheetClass: ConstructorOf<PlaylistSoundConfig>;\n    };\n\n    /**\n     * Configuration for the AmbientLight embedded document type and its representation on the game Canvas\n     */\n    AmbientLight: {\n      /**\n       * @defaultValue `AmbientLightDocument`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof AmbientLightDocument>;\n\n      /**\n       * @defaultValue `AmbientLightDocument`\n       */\n      objectClass: ConfiguredObjectClassOrDefault<typeof AmbientLight>;\n\n      /**\n       * @defaultValue `AmbientLightDocument`\n       */\n      layerClass: ConstructorOf<LightingLayer>;\n\n      /**\n       * @defaultValue `AmbientLightDocument`\n       */\n      sheetClass: ConstructorOf<LightConfig>;\n    };\n\n    /**\n     * Configuration for the AmbientSound embedded document type and its representation on the game Canvas\n     */\n    AmbientSound: {\n      /**\n       * @defaultValue `AmbientSoundDocument`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof AmbientSoundDocument>;\n\n      /**\n       * @defaultValue `AmbientSound`\n       */\n      objectClass: ConfiguredObjectClassOrDefault<typeof AmbientSound>;\n\n      /**\n       * @defaultValue `SoundsLayer`\n       */\n      layerClass: ConstructorOf<SoundsLayer>;\n\n      /**\n       * @defaultValue `AmbientSoundConfig`\n       */\n      sheetClass: ConstructorOf<AmbientSoundConfig>;\n    };\n\n    /**\n     * Configuration for the Combatant embedded document type within a Combat document\n     */\n    Combatant: {\n      /**\n       * @defaultValue `Combatant`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof Combatant>;\n\n      /**\n       * @defaultValue `CombatantConfig`\n       */\n      sheetClass: ConstructorOf<CombatantConfig>;\n    };\n\n    /**\n     * Configuration for the Drawing embedded document type and its representation on the game Canvas\n     */\n    Drawing: {\n      /**\n       * @defaultValue `DrawingDocument`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof DrawingDocument>;\n\n      /**\n       * @defaultValue `Drawing`\n       */\n      objectClass: ConfiguredObjectClassOrDefault<typeof Drawing>;\n\n      /**\n       * @defaultValue `DrawingsLayer`\n       */\n      layerClass: ConstructorOf<DrawingsLayer>;\n\n      /**\n       * @defaultValue `DrawingConfig`\n       */\n      sheetClass: ConstructorOf<DrawingConfig>;\n    };\n\n    /**\n     * Configuration for the MeasuredTemplate embedded document type and its representation on the game Canvas\n     */\n    MeasuredTemplate: {\n      defaults: {\n        /**\n         * @defaultValue `53.13`\n         */\n        angle: number;\n\n        /**\n         * @defaultValue `1`\n         */\n        width: number;\n      };\n\n      types: {\n        /**\n         * @defaultValue `'Circle'`\n         */\n        circle: string;\n\n        /**\n         * @defaultValue `'Cone'`\n         */\n        cone: string;\n\n        /**\n         * @defaultValue `'Rectangle'`\n         */\n        rect: string;\n\n        /**\n         * @defaultValue `'Ray'`\n         */\n        ray: string;\n      } & Partial<Record<string, string>>;\n\n      /**\n       * @defaultValue `MeasuredTemplateDocument`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof MeasuredTemplateDocument>;\n\n      /**\n       * @defaultValue `MeasuredTemplate`\n       */\n      objectClass: ConfiguredObjectClassOrDefault<typeof MeasuredTemplate>;\n\n      /**\n       * @defaultValue `TemplateLayer`\n       */\n      layerClass: ConstructorOf<TemplateLayer>;\n\n      /**\n       * @defaultValue `MeasuredTemplateConfig`\n       */\n      sheetClass: ConstructorOf<MeasuredTemplateConfig>;\n    };\n\n    /**\n     * Configuration for the Note embedded document type and its representation on the game Canvas\n     */\n    Note: {\n      /**\n       * @defaultValue `NoteDocument`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof NoteDocument>;\n\n      /**\n       * @defaultValue `Note`\n       */\n      objectClass: ConfiguredObjectClassOrDefault<typeof Note>;\n\n      /**\n       * @defaultValue `NotesLayer`\n       */\n      layerClass: ConstructorOf<NotesLayer>;\n\n      /**\n       * @defaultValue `NoteConfig`\n       */\n      sheetClass: ConstructorOf<NoteConfig>;\n    };\n\n    /**\n     * Configuration for the Tile embedded document type and its representation on the game Canvas\n     */\n    Tile: {\n      /**\n       * @defaultValue `TileDocument`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof TileDocument>;\n\n      /**\n       * @defaultValue `Tile`\n       */\n      objectClass: ConfiguredObjectClassOrDefault<typeof Tile>;\n\n      /**\n       * @defaultValue `BackgroundLayer`\n       */\n      layerClass: ConstructorOf<BackgroundLayer>;\n\n      /**\n       * @defaultValue `TileConfig`\n       */\n      sheetClass: ConstructorOf<TileConfig>;\n    };\n\n    /**\n     * Configuration for the Token embedded document type and its representation on the game Canvas\n     */\n    Token: {\n      /**\n       * @defaultValue `TokenDocument`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof TokenDocument>;\n\n      /**\n       * @defaultValue `Token`\n       */\n      objectClass: ConfiguredObjectClassOrDefault<typeof Token>;\n\n      /**\n       * @defaultValue `TokenLayer`\n       */\n      layerClass: ConstructorOf<TokenLayer>;\n\n      /**\n       * @defaultValue `TokenConfig`\n       */\n      sheetClass: ConstructorOf<TokenConfig>;\n    };\n\n    /**\n     * Configuration for the Wall embedded document type and its representation on the game Canvas\n     */\n    Wall: {\n      /**\n       * @defaultValue `WallDocument`\n       */\n      documentClass: ConfiguredDocumentClassOrDefault<typeof WallDocument>;\n\n      /**\n       * @defaultValue `Wall`\n       */\n      objectClass: ConfiguredObjectClassOrDefault<typeof Wall>;\n\n      /**\n       * @defaultValue `WallsLayer`\n       */\n      layerClass: ConstructorOf<WallsLayer>;\n\n      /**\n       * @defaultValue `WallConfig`\n       */\n      sheetClass: ConstructorOf<WallConfig>;\n    };\n\n    /**\n     * Default configuration options for TinyMCE editors\n     */\n    TinyMCE: tinyMCE.RawEditorSettings;\n\n    /**\n     * Configuration for the WebRTC implementation class\n     */\n    WebRTC: {\n      /**\n       * @defaultValue `SimplePeerAVClient`\n       */\n      clientClass: PropertyTypeOrFallback<WebRTCConfig, 'clientClass', typeof AVClient>;\n\n      /**\n       * @defaultValue `50`\n       */\n      detectPeerVolumeInterval: number;\n\n      /**\n       * @defaultValue `20`\n       */\n      detectSelfVolumeInterval: number;\n\n      /**\n       * @defaultValue `25`\n       */\n      emitVolumeInterval: number;\n\n      /**\n       * @defaultValue `2`\n       */\n      speakingThresholdEvents: number;\n\n      /**\n       * @defaultValue `10`\n       */\n      speakingHistoryLength: number;\n    };\n\n    /**\n     * Configure the Application classes used to render various core UI elements in the application\n     */\n    ui: CONFIG.UI;\n  }\n\n  namespace CONFIG {\n    interface UI {\n      /**\n       * @defaultValue `MainMenu`\n       */\n      menu: ConstructorOf<MainMenu>;\n\n      /**\n       * @defaultValue `Sidebar`\n       */\n      sidebar: ConstructorOf<Sidebar>;\n\n      /**\n       * @defaultValue `Pause`\n       */\n      pause: ConstructorOf<Pause>;\n\n      /**\n       * @defaultValue `SceneNavigation`\n       */\n      nav: ConstructorOf<SceneNavigation>;\n\n      /**\n       * @defaultValue `Notifications`\n       */\n      notifications: ConstructorOf<Notifications>;\n\n      /**\n       * @defaultValue `ActorDirectory`\n       */\n      actors: ConstructorOf<ActorDirectory>;\n\n      /**\n       * @defaultValue `ChatLog`\n       */\n      chat: ConstructorOf<ChatLog>;\n\n      /**\n       * @defaultValue `CombatTracker`\n       */\n      combat: ConstructorOf<CombatTracker>;\n\n      /**\n       * @defaultValue `CompendiumDirectory`\n       */\n      compendium: ConstructorOf<CompendiumDirectory>;\n\n      /**\n       * @defaultValue `SceneControls`\n       */\n      controls: ConstructorOf<SceneControls>;\n\n      /**\n       * @defaultValue `Hotbar`\n       */\n      hotbar: ConstructorOf<Hotbar>;\n\n      /**\n       * @defaultValue `ItemDirectory`\n       */\n      items: ConstructorOf<ItemDirectory>;\n\n      /**\n       * @defaultValue `JournalDirectory`\n       */\n      journal: ConstructorOf<JournalDirectory>;\n\n      /**\n       * @defaultValue `MacroDirectory`\n       */\n      macros: ConstructorOf<MacroDirectory>;\n\n      /**\n       * @defaultValue `PlayerList`\n       */\n      players: ConstructorOf<PlayerList>;\n\n      /**\n       * @defaultValue `PlaylistDirectory`\n       */\n      playlists: ConstructorOf<PlaylistDirectory>;\n\n      /**\n       * @defaultValue `SceneDirectory`\n       */\n      scenes: ConstructorOf<SceneDirectory>;\n\n      /**\n       * @defaultValue `Settings`\n       */\n      settings: ConstructorOf<Settings>;\n\n      /**\n       * @defaultValue `RollTableDirectory`\n       */\n      tables: ConstructorOf<RollTableDirectory>;\n\n      /**\n       * @defaultValue `CameraViews`\n       */\n      webrtc: ConstructorOf<CameraViews>;\n    }\n  }\n\n  const CONFIG: CONFIG;\n}\n"
    ]
  