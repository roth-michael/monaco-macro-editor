
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/constants.mjs.d.ts",
      "/**\n * The shortened software name\n */\nexport const vtt: 'Foundry VTT';\n\n/**\n * The full software name\n */\nexport const VTT: 'Foundry Virtual Tabletop';\n\n/**\n * The software website URL\n */\nexport const WEBSITE_URL: 'https://foundryvtt.com';\n\n/**\n * An ASCII greeting displayed to the client\n */\nexport const ASCII = `_______________________________________________________________\n _____ ___  _   _ _   _ ____  ______   __ __     _______ _____\n|  ___/ _ \\\\| | | | \\\\ | |  _ \\\\|  _ \\\\ \\\\ / / \\\\ \\\\   / |_   _|_   _|\n| |_ | | | | | | |  \\\\| | | | | |_) \\\\ V /   \\\\ \\\\ / /  | |   | |\n|  _|| |_| | |_| | |\\\\  | |_| |  _ < | |     \\\\ V /   | |   | |\n|_|   \\\\___/ \\\\___/|_| \\\\_|____/|_| \\\\_\\\\|_|      \\\\_/    |_|   |_|\n===============================================================`;\n\n/**\n * Define the allowed ActiveEffect application modes\n */\nexport const ACTIVE_EFFECT_MODES: {\n  CUSTOM: 0;\n  MULTIPLY: 1;\n  ADD: 2;\n  DOWNGRADE: 3;\n  UPGRADE: 4;\n  OVERRIDE: 5;\n};\n\n/**\n * Define the string name used for the base entity type when specific sub-types are not defined by the system\n */\nexport const BASE_ENTITY_TYPE: 'base';\n\n/**\n * Valid Chat Message types\n */\nexport const CHAT_MESSAGE_TYPES: {\n  OTHER: 0;\n  OOC: 1;\n  IC: 2;\n  EMOTE: 3;\n  WHISPER: 4;\n  ROLL: 5;\n};\n\n/**\n * The allowed Entity types which may exist within a Compendium pack\n * This is a subset of ENTITY_TYPES\n */\nexport const COMPENDIUM_ENTITY_TYPES: ['Actor', 'Item', 'Scene', 'JournalEntry', 'Macro', 'RollTable', 'Playlist'];\n\n/**\n * Define the set of languages which have built-in support in the core software\n */\nexport const CORE_SUPPORTED_LANGUAGES: ['en'];\n\n/**\n * The default artwork used for Token images if none is provided\n */\nexport const DEFAULT_TOKEN: 'icons/svg/mystery-man.svg';\n\n/**\n * The default artwork used for Note placeables if none is provided\n */\nexport const DEFAULT_NOTE_ICON: 'icons/svg/book.svg';\n\n/**\n * The default icon image used for Macro documents if no other image is provided\n */\nexport const DEFAULT_MACRO_ICON: 'icons/svg/dice-target.svg';\n\n/**\n * The supported dice roll visibility modes\n */\nexport const DICE_ROLL_MODES: {\n  PUBLIC: 'roll';\n  PRIVATE: 'gmroll';\n  BLIND: 'blindroll';\n  SELF: 'selfroll';\n};\n\n/**\n * The allowed Drawing types which may be saved\n */\nexport const DRAWING_TYPES: {\n  RECTANGLE: 'r';\n  ELLIPSE: 'e';\n  TEXT: 't';\n  POLYGON: 'p';\n  FREEHAND: 'f';\n};\n\n/**\n * The allowed fill types which a Drawing object may display\n * NONE: The drawing is not filled\n * SOLID: The drawing is filled with a solid color\n * PATTERN: The drawing is filled with a tiled image pattern\n */\nexport const DRAWING_FILL_TYPES: {\n  NONE: 0;\n  SOLID: 1;\n  PATTERN: 2;\n};\n\n/**\n * Define the allowed Entity class types\n */\nexport const ENTITY_TYPES: [\n  'Actor',\n  'ChatMessage',\n  'Combat',\n  'Item',\n  'Folder',\n  'JournalEntry',\n  'Macro',\n  'Playlist',\n  'RollTable',\n  'Scene',\n  'User'\n];\n\n/**\n * Define the allowed Entity types which may be dynamically linked in chat\n */\nexport const ENTITY_LINK_TYPES: ['Actor', 'Item', 'Scene', 'JournalEntry', 'Macro', 'RollTable'];\n\n/**\n * Define the allowed permission levels for a non-user Entity.\n * Each level is assigned a value in ascending order. Higher levels grant more permissions.\n */\nexport const ENTITY_PERMISSIONS: {\n  NONE: 0;\n  LIMITED: 1;\n  OBSERVER: 2;\n  OWNER: 3;\n};\n\n/**\n * Define the allowed Entity types which Folders may contain\n */\nexport const FOLDER_ENTITY_TYPES: ['Actor', 'Item', 'Scene', 'JournalEntry', 'Playlist', 'RollTable'];\n\n/**\n * The maximum allowed level of depth for Folder nesting\n */\nexport const FOLDER_MAX_DEPTH: 3;\n\n/**\n * A list of allowed game URL names\n */\nexport const GAME_VIEWS: ['game', 'stream'];\n\n/**\n * The minimum allowed grid size which is supported by the software\n */\nexport const GRID_MIN_SIZE: 50;\n\n/**\n * The allowed Grid types which are supported by the software\n */\nexport const GRID_TYPES: {\n  GRIDLESS: 0;\n  SQUARE: 1;\n  HEXODDR: 2;\n  HEXEVENR: 3;\n  HEXODDQ: 4;\n  HEXEVENQ: 5;\n};\n\n/**\n * A list of supported setup URL names\n */\nexport const SETUP_VIEWS: ['license', 'setup', 'players', 'join'];\n\n/**\n * Enumerate the source types which can be used for an AmbientLight placeable object\n */\nexport const SOURCE_TYPES: {\n  LOCAL: 'l';\n  GLOBAL: 'g';\n  UNIVERSAL: 'u';\n};\n\n/**\n * An Array of valid MacroAction scope values\n */\nexport const MACRO_SCOPES: ['global', 'actors', 'actor'];\n\n/**\n * An enumeration of valid Macro types\n */\nexport const MACRO_TYPES: {\n  SCRIPT: 'script';\n  CHAT: 'chat';\n};\n\n/**\n * The allowed playback modes for an audio Playlist\n * DISABLED: The playlist does not play on its own, only individual Sound tracks played as a soundboard\n * SEQUENTIAL: The playlist plays sounds one at a time in sequence\n * SHUFFLE: The playlist plays sounds one at a time in randomized order\n * SIMULTANEOUS: The playlist plays all contained sounds at the same time\n */\nexport const PLAYLIST_MODES: {\n  DISABLED: -1;\n  SEQUENTIAL: 0;\n  SHUFFLE: 1;\n  SIMULTANEOUS: 2;\n};\n\n/**\n * The allowed package types\n */\nexport const PACKAGE_TYPES: ['world', 'system', 'module'];\n\n/**\n * Encode the reasons why a package may be available or unavailable for use\n */\nexport const PACKAGE_AVAILABILITY_CODES: {\n  UNKNOWN: -1;\n  REQUIRES_UPDATE: 0;\n  AVAILABLE: 1;\n  REQUIRES_SYSTEM: 2;\n  REQUIRES_DEPENDENCY: 3;\n  REQUIRES_CORE: 4;\n};\n\n/**\n * A safe password string which can be displayed\n */\nexport const PASSWORD_SAFE_STRING: '••••••••••••••••';\n\n/**\n * The allowed software update channels\n */\nexport const SOFTWARE_UPDATE_CHANNELS: {\n  /**\n   * @defaultValue `'SETUP.UpdateAlpha'`\n   */\n  alpha: string;\n\n  /**\n   * @defaultValue `'SETUP.UpdateBeta'`\n   */\n  beta: string;\n\n  /**\n   * @defaultValue `'SETUP.UpdateBeta'`\n   */\n  release: string;\n};\n\n/**\n * The default sorting density for manually ordering child objects within a parent\n */\nexport const SORT_INTEGER_DENSITY: 100000;\n\n/**\n * The allowed types of a TableResult document\n */\nexport const TABLE_RESULT_TYPES: {\n  TEXT: 0;\n  ENTITY: 1;\n  COMPENDIUM: 2;\n};\n\n/**\n * Define the valid anchor locations for a Tooltip displayed on a Placeable Object\n */\nexport const TEXT_ANCHOR_POINTS: {\n  BOTTOM: 0;\n  CENTER: 1;\n  LEFT: 2;\n  RIGHT: 3;\n  TOP: 4;\n};\n\n/**\n * Define the valid occlusion modes which an overhead tile can use\n */\nexport const TILE_OCCLUSION_MODES: {\n  NONE: 0;\n  FADE: 1;\n  ROOF: 2;\n  RADIAL: 3;\n};\n\n/**\n * Describe the various thresholds of token control upon which to show certain pieces of information\n * NONE - no information is displayed\n * CONTROL - displayed when the token is controlled\n * OWNER HOVER - displayed when hovered by a GM or a user who owns the actor\n * HOVER - displayed when hovered by any user\n * OWNER - always displayed for a GM or for a user who owns the actor\n * ALWAYS - always displayed for everyone\n */\nexport const TOKEN_DISPLAY_MODES: {\n  NONE: 0;\n  CONTROL: 10;\n  OWNER_HOVER: 20;\n  HOVER: 30;\n  OWNER: 40;\n  ALWAYS: 50;\n};\n\n/**\n * The allowed Token disposition types\n * HOSTILE - Displayed as an enemy with a red border\n * NEUTRAL - Displayed as neutral with a yellow border\n * FRIENDLY - Displayed as an ally with a cyan border\n */\nexport const TOKEN_DISPOSITIONS: {\n  HOSTILE: -1;\n  NEUTRAL: 0;\n  FRIENDLY: 1;\n};\n\n/**\n * Define the allowed User permission levels.\n * Each level is assigned a value in ascending order. Higher levels grant more permissions.\n */\nexport const USER_ROLES: {\n  NONE: 0;\n  PLAYER: 1;\n  TRUSTED: 2;\n  ASSISTANT: 3;\n  GAMEMASTER: 4;\n};\n\n/**\n * Invert the User Role mapping to recover role names from a role integer\n */\nexport const USER_ROLE_NAMES: { [Key in keyof typeof USER_ROLES as typeof USER_ROLES[Key]]: Key };\n\nexport interface MeasuredTemplateTypes {\n  CIRCLE: 'circle';\n  CONE: 'cone';\n  RECTANGLE: 'rect';\n  RAY: 'ray';\n}\n\n/**\n * An enumeration of the allowed types for a MeasuredTemplate embedded document\n */\nexport const MEASURED_TEMPLATE_TYPES: MeasuredTemplateTypes;\n\n/**\n * A list of MIME types which are treated as uploaded \"media\", which are allowed to overwrite existing files.\n * Any non-media MIME type is not allowed to replace an existing file.\n * @defaultValue\n * ```typescript\n * [\n *   'application/json',\n *   'application/ogg',\n *   'application/pdf',\n *   'audio/wave',\n *   'audio/wav',\n *   'audio/webm',\n *   'audio/ogg',\n *   'audio/midi',\n *   'audio/mpeg',\n *   'audio/opus',\n *   'audio/aac',\n *   'image/apng',\n *   'image/bmp',\n *   'image/gif',\n *   'image/jpeg',\n *   'image/png',\n *   'image/svg+xml',\n *   'image/tiff',\n *   'image/webp',\n *   'text/plain',\n *   'text/markdown',\n *   'video/mpeg',\n *   'video/mp4',\n *   'video/ogg'\n * ]\n * ```\n */\nexport const MEDIA_MIME_TYPES: string[];\n\nexport interface UserCapability {\n  disableGM: boolean;\n  hint: string;\n  label: string;\n  defaultRole: UserRole;\n}\n\n/**\n * Define the recognized User capabilities which individual Users or role levels may be permitted to perform\n */\nexport const USER_PERMISSIONS: {\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.ActorCreate\",\n   *    hint: \"PERMISSION.ActorCreateHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.ASSISTANT\n   * }\n   * ```\n   */\n  ACTOR_CREATE: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.BroadcastAudio\",\n   *    hint: \"PERMISSION.BroadcastAudioHint\",\n   *    disableGM: true,\n   *    defaultRole: USER_ROLES.TRUSTED\n   * }\n   * ```\n   */\n  BROADCAST_AUDIO: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.BroadcastVideo\",\n   *    hint: \"PERMISSION.BroadcastVideoHint\",\n   *    disableGM: true,\n   *    defaultRole: USER_ROLES.TRUSTED\n   * }\n   * ```\n   */\n  BROADCAST_VIDEO: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.DrawingCreate\",\n   *    hint: \"PERMISSION.DrawingCreateHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.TRUSTED\n   * }\n   * ```\n   */\n  DRAWING_CREATE: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.ItemCreate\",\n   *    hint: \"PERMISSION.ItemCreateHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.ASSISTANT\n   * }\n   * ```\n   */\n  ITEM_CREATE: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.FilesBrowse\",\n   *    hint: \"PERMISSION.FilesBrowseHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.TRUSTED\n   * }\n   * ```\n   */\n  FILES_BROWSE: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.FilesUpload\",\n   *    hint: \"PERMISSION.FilesUploadHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.ASSISTANT\n   * }\n   * ```\n   */\n  FILES_UPLOAD: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.JournalCreate\"\n   *    hint: \"PERMISSION.JournalCreateHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.TRUSTED\n   * }\n   * ```\n   */\n  JOURNAL_CREATE: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.MacroScript\",\n   *    hint: \"PERMISSION.MacroScriptHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.PLAYER\n   * }\n   * ```\n   */\n  MACRO_SCRIPT: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.MessageWhisper\",\n   *    hint: \"PERMISSION.MessageWhisperHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.PLAYER\n   * }\n   * ```\n   */\n  MESSAGE_WHISPER: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.NoteCreate\",\n   *    hint: \"PERMISSION.NoteCreateHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.TRUSTED\n   * }\n   * ```\n   */\n  NOTE_CREATE: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.SettingsModify\",\n   *    hint: \"PERMISSION.SettingsModifyHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.ASSISTANT\n   * }\n   * ```\n   */\n  SETTINGS_MODIFY: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.ShowCursor\",\n   *    hint: \"PERMISSION.ShowCursorHint\",\n   *    disableGM: true,\n   *    defaultRole: USER_ROLES.PLAYER\n   * }\n   * ```\n   */\n  SHOW_CURSOR: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.ShowRuler\",\n   *    hint: \"PERMISSION.ShowRulerHint\",\n   *    disableGM: true,\n   *    defaultRole: USER_ROLES.PLAYER\n   * }\n   * ```\n   */\n  SHOW_RULER: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.TemplateCreate\",\n   *    hint: \"PERMISSION.TemplateCreateHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.PLAYER\n   * }\n   * ```\n   */\n  TEMPLATE_CREATE: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.TokenCreate\",\n   *    hint: \"PERMISSION.TokenCreateHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.ASSISTANT\n   * }\n   * ```\n   */\n  TOKEN_CREATE: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.TokenConfigure\",\n   *    hint: \"PERMISSION.TokenConfigureHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.TRUSTED\n   * }\n   * ```\n   */\n  TOKEN_CONFIGURE: UserCapability;\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *    label: \"PERMISSION.WallDoors\",\n   *    hint: \"PERMISSION.WallDoorsHint\",\n   *    disableGM: false,\n   *    defaultRole: USER_ROLES.PLAYER\n   * }\n   * ```\n   */\n  WALL_DOORS: UserCapability;\n};\n\n/**\n * The allowed directions of effect that a Wall can have\n * BOTH: The wall collides from both directions\n * LEFT: The wall collides only when a ray strikes its left side\n * RIGHT: The wall collides only when a ray strikes its right side\n */\nexport const WALL_DIRECTIONS: {\n  BOTH: 0;\n  LEFT: 1;\n  RIGHT: 2;\n};\n\n/**\n * The allowed door types which a Wall may contain\n * NONE: The wall does not contain a door\n * DOOR: The wall contains a regular door\n * SECRET: The wall contains a secret door\n */\nexport const WALL_DOOR_TYPES: {\n  NONE: 0;\n  DOOR: 1;\n  SECRET: 2;\n};\n\n/**\n * The allowed door states which may describe a Wall that contains a door\n * CLOSED: The door is closed\n * OPEN: The door is open\n * LOCKED: The door is closed and locked\n */\nexport const WALL_DOOR_STATES: {\n  CLOSED: 0;\n  OPEN: 1;\n  LOCKED: 2;\n};\n\n/**\n * The types of movement collision which a Wall may impose\n * NONE: Movement does not collide with this wall\n * NORMAL: Movement collides with this wall\n */\nexport const WALL_MOVEMENT_TYPES: {\n  NONE: 0;\n  NORMAL: 1;\n};\n\n/**\n * The types of sensory collision which a Wall may impose\n * NONE: Senses do not collide with this wall\n * NORMAL: Senses collide with this wall\n * LIMITED: Senses collide with the second intersection, bypassing the first\n */\nexport const WALL_SENSE_TYPES: {\n  NONE: 0;\n  NORMAL: 1;\n  LIMITED: 2;\n};\n\n/**\n * The allowed set of HTML template extensions\n * @defaultValue `[\"html\", \"hbs\"]`\n */\nexport const HTML_FILE_EXTENSIONS: string[];\n\n/**\n * The supported file extensions for image-type files\n * @defaultValue `[\"jpg\", \"jpeg\", \"png\", \"svg\", \"webp\"]`\n */\nexport const IMAGE_FILE_EXTENSIONS: string[];\n\n/**\n * The supported file extensions for video-type files\n * @defaultValue `[\"mp4\", \"ogg\", \"webm\", \"m4v\"]`\n */\nexport const VIDEO_FILE_EXTENSIONS: string[];\n\n/**\n * The supported file extensions for audio-type files\n * @defaultValue `[\"flac\", \"m4a\", \"mp3\", \"ogg\", \"opus\", \"wav\", \"webm\"]`\n */\nexport const AUDIO_FILE_EXTENSIONS: string[];\n\nexport type ActiveEffectMode = ValueOf<typeof ACTIVE_EFFECT_MODES>;\nexport type ChatMessageType = ValueOf<typeof CHAT_MESSAGE_TYPES>;\nexport type DiceRollMode = ValueOf<typeof DICE_ROLL_MODES>;\nexport type DrawingFillType = ValueOf<typeof DRAWING_FILL_TYPES>;\nexport type DrawingType = ValueOf<typeof DRAWING_TYPES>;\nexport type EntityPermission = ValueOf<typeof ENTITY_PERMISSIONS>;\nexport type EntityType = ValueOf<typeof ENTITY_TYPES>;\nexport type FolderEntityTypes = ValueOf<typeof FOLDER_ENTITY_TYPES>;\nexport type CompendiumEntityType = ValueOf<typeof COMPENDIUM_ENTITY_TYPES>;\nexport type GridType = ValueOf<typeof GRID_TYPES>;\nexport type MacroTypes = ValueOf<typeof CONST.MACRO_TYPES>;\nexport type MacroScopes = ValueOf<typeof CONST.MACRO_SCOPES>;\nexport type PackageAvailabilityCode = ValueOf<typeof PACKAGE_AVAILABILITY_CODES>;\nexport type PackageTypes = ValueOf<typeof PACKAGE_TYPES>;\nexport type PlaylistMode = ValueOf<typeof PLAYLIST_MODES>;\nexport type SoftwareUpdateChannel = ValueOf<typeof SOFTWARE_UPDATE_CHANNELS>;\nexport type SourceType = ValueOf<typeof SOURCE_TYPES>;\nexport type TableResultType = ValueOf<typeof TABLE_RESULT_TYPES>;\nexport type TextAnchorPoint = ValueOf<typeof TEXT_ANCHOR_POINTS>;\nexport type TileOcclusionModes = ValueOf<typeof TILE_OCCLUSION_MODES>;\nexport type TokenDisplayMode = ValueOf<typeof TOKEN_DISPLAY_MODES>;\nexport type TokenDisposition = ValueOf<typeof TOKEN_DISPOSITIONS>;\nexport type UserRole = ValueOf<typeof USER_ROLES>;\nexport type UserRoleName = ValueOf<typeof USER_ROLE_NAMES>;\nexport type WallDirection = ValueOf<typeof WALL_DIRECTIONS>;\nexport type WallDoorState = ValueOf<typeof WALL_DOOR_STATES>;\nexport type WallDoorType = ValueOf<typeof WALL_DOOR_TYPES>;\nexport type WallMovementType = ValueOf<typeof WALL_MOVEMENT_TYPES>;\nexport type WallSenseType = ValueOf<typeof WALL_SENSE_TYPES>;\n"
    ]
  