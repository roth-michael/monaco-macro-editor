
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/applications/formApplications/folderConfig.d.ts",
      "import type { ConfiguredDocumentClass } from '../../../../types/helperTypes';\nimport type { SortingModes } from '../../../common/data/data.mjs/folderData';\n\ndeclare global {\n  /**\n   * The Application responsible for configuring a single Folder document.\n   */\n  class FolderConfig extends DocumentSheet<\n    DocumentSheet.Options,\n    FolderConfig.Data,\n    InstanceType<ConfiguredDocumentClass<typeof Folder>>\n  > {\n    /**\n     * @override\n     * @defaultValue\n     * ```typescript\n     * foundry.utils.mergeObject(super.defaultOptions, {\n     *   classes: [\"sheet\", \"folder-edit\"],\n     *   template: \"templates/sidebar/folder-edit.html\",\n     *   width: 360\n     * })\n     * ```\n     */\n    static get defaultOptions(): typeof DocumentSheet['defaultOptions'];\n\n    /** @override */\n    get id(): string;\n\n    /** @override */\n    get title(): string;\n\n    /**\n     * @param options - (unused)\n     * @override\n     */\n    getData(options?: Partial<FormApplication.Options>): Promise<FolderConfig.Data>;\n\n    /**\n     * @param event - (unused)\n     * @override\n     * @internal\n     */\n    protected _updateObject(\n      event: Event,\n      formData: FolderConfig.FormData\n    ): Promise<InstanceType<ConfiguredDocumentClass<typeof Folder>> | undefined>;\n  }\n\n  namespace FolderConfig {\n    interface Data {\n      name: string;\n      newName: string;\n      folder: foundry.data.FolderData;\n      safeColor: string;\n      sortingModes: {\n        a: 'FOLDER.SortAlphabetical';\n        m: 'FOLDER.SortManual';\n      };\n      submitText: string;\n    }\n\n    interface FormData {\n      color: string;\n      name: string;\n      parent: string;\n      sorting: SortingModes;\n      type: foundry.CONST.FolderEntityTypes;\n    }\n  }\n}\n"
    ]
  