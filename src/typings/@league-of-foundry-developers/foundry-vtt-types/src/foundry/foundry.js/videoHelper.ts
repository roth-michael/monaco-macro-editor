
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/videoHelper.d.ts",
      "/**\n * A helper class to provide common functionality for working with HTML5 video objects\n * A singleton instance of this class is available as `game.video`\n */\ndeclare class VideoHelper {\n  constructor();\n\n  /**\n   * A collectinon of HTML5 video objects which are currently active within the FVTT page\n   * @defaultValue `[]`\n   */\n  videos: HTMLVideoElement[];\n\n  /**\n   * A user gesture must be registered before video playback can begin.\n   * This Set records the video elements which await such a gesture.\n   * @defaultValue an empty Set\n   */\n  pending: Set<HTMLVideoElement>;\n\n  /**\n   * A mapping of base64 video thumbnail images\n   * @defaultValue an empty Map\n   */\n  thumbs: Map<string, string>;\n\n  /**\n   * A flag for whether video playback is currently locked by awaiting a user gesture\n   * @defaultValue `true`\n   */\n  locked: boolean;\n\n  /* -------------------------------------------- */\n  /*  Methods                                     */\n  /* -------------------------------------------- */\n\n  static hasVideoExtension(src: string): boolean;\n\n  /* -------------------------------------------- */\n\n  /**\n   * Play a single video source\n   * If playback is not yet enabled, add the video to the pending queue\n   * @param video - The VIDEO element to play\n   */\n  play(video: HTMLElement): void;\n\n  /* -------------------------------------------- */\n\n  /**\n   * Register an event listener to await the first mousemove gesture and begin playback once observed\n   * A user interaction must involve a mouse click or keypress.\n   * Listen for any of these events, and handle the first observed gesture.\n   */\n  awaitFirstGesture(): void;\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle the first observed user gesture\n   * We need a slight delay because unfortunately Chrome is stupid and doesn't always acknowledge the gesture fast enough.\n   * @param event - The mouse-move event which enables playback\n   */\n  protected _onFirstGesture(event: Event): void;\n\n  /* -------------------------------------------- */\n\n  /**\n   * Create and cache a static thumbnail to use for the video.\n   * The thumbnail is cached using the video file path or URL.\n   * @param src     - The source video URL\n   * @param options - Thumbnail creation options, including width and height\n   * @returns The created and cached base64 thumbnail image\n   */\n  createThumbnail(src: string, options: ImageHelper.CompositeOptions): Promise<string>;\n}\n"
    ]
  