
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/pixi/containers/canvasLayers/placeablesLayers/notesLayer.d.ts",
      "import { DropData } from '../../../../clientDocumentMixin';\n\ndeclare global {\n  /**\n   * The Notes Layer which contains Note canvas objects\n   */\n  class NotesLayer extends PlaceablesLayer<'Note', NotesLayer.LayerOptions> {\n    /**\n     * @remarks This is not overridden in foundry but reflects the real behavior.\n     */\n    static get instance(): Canvas['notes'];\n\n    /**\n     * @override\n     * @defaultValue\n     * ```\n     * foundry.utils.mergeObject(super.layerOptions, {\n     *  name: 'notes',\n     *  canDragCreate: false,\n     *  sortActiveTop: true,\n     *  zIndex: 60\n     * })\n     * ```\n     */\n    static get layerOptions(): NotesLayer.LayerOptions;\n\n    /** @override */\n    static documentName: 'Note';\n\n    /**\n     * The named core setting which tracks the toggled visibility state of map notes\n     */\n    static TOGGLE_SETTING: 'notesDisplayToggle';\n\n    /** @override */\n    activate(): this;\n\n    /** @override */\n    deactivate(): this;\n\n    /**\n     * Register game settings used by the NotesLayer\n     */\n    static registerSettings(): void;\n\n    /** @override */\n    protected _onMouseDown(event: PIXI.InteractionEvent): void;\n\n    /**\n     * Handle JournalEntry entity drop data\n     */\n    protected _onDropData(event: DragEvent, data: DropData<JournalEntry>): Promise<false | void>;\n  }\n\n  namespace NotesLayer {\n    interface LayerOptions extends PlaceablesLayer.LayerOptions<'Note'> {\n      name: 'notes';\n      canDragCreate: false;\n      sortActiveTop: true;\n      zIndex: 60;\n    }\n\n    type DropData = {\n      type?: 'JournalEntry';\n    } & Canvas.DropPosition &\n      DeepPartial<any>; // TODO: Update this\n  }\n}\n"
    ]
  