
    export default [
      "typescript/lib/lib.es2015.proxy.d.ts",
      "/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib=\"true\"/>\r\n\n\ninterface ProxyHandler<T extends object> {\r\n    apply?(target: T, thisArg: any, argArray: any[]): any;\r\n    construct?(target: T, argArray: any[], newTarget: Function): object;\r\n    defineProperty?(target: T, p: string | symbol, attributes: PropertyDescriptor): boolean;\r\n    deleteProperty?(target: T, p: string | symbol): boolean;\r\n    get?(target: T, p: string | symbol, receiver: any): any;\r\n    getOwnPropertyDescriptor?(target: T, p: string | symbol): PropertyDescriptor | undefined;\r\n    getPrototypeOf?(target: T): object | null;\r\n    has?(target: T, p: string | symbol): boolean;\r\n    isExtensible?(target: T): boolean;\r\n    ownKeys?(target: T): ArrayLike<string | symbol>;\r\n    preventExtensions?(target: T): boolean;\r\n    set?(target: T, p: string | symbol, value: any, receiver: any): boolean;\r\n    setPrototypeOf?(target: T, v: object | null): boolean;\r\n}\r\n\r\ninterface ProxyConstructor {\r\n    revocable<T extends object>(target: T, handler: ProxyHandler<T>): { proxy: T; revoke: () => void; };\r\n    new <T extends object>(target: T, handler: ProxyHandler<T>): T;\r\n}\r\ndeclare var Proxy: ProxyConstructor;\r\n"
    ]
  