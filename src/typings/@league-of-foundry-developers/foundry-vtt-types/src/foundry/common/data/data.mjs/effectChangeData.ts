
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/effectChangeData.d.ts",
      "import { DocumentData } from '../../abstract/module.mjs';\nimport { BaseActiveEffect } from '../../documents.mjs';\nimport * as fields from '../fields.mjs';\nimport * as CONST from '../../constants.mjs';\nimport { PropertiesToSource } from '../../../../types/helperTypes';\n\ninterface EffectChangeDataSchema extends DocumentSchema {\n  key: typeof fields.BLANK_STRING;\n  value: typeof fields.BLANK_STRING;\n  mode: DocumentField<number> & {\n    type: typeof Number;\n    required: true;\n    default: typeof CONST.ACTIVE_EFFECT_MODES.ADD;\n    validate: (m: unknown) => boolean;\n    validationError: 'Invalid mode specified for change in ActiveEffectData';\n  };\n  priority: typeof fields.NUMERIC_FIELD;\n}\n\ninterface EffectChangeDataProperties {\n  /**\n   * The attribute path in the Actor or Item data which the change modifies\n   * @defaultValue `''`\n   */\n  key: string;\n\n  /**\n   * The value of the change effect\n   * @defaultValue `''`\n   */\n  value: string;\n\n  /**\n   * The modification mode with which the change is applied\n   */\n  mode: CONST.ActiveEffectMode;\n\n  /**\n   * The priority level with which this change is applied\n   */\n  priority?: number | null;\n}\n\nexport interface EffectChangeDataConstructorData {\n  /**\n   * The attribute path in the Actor or Item data which the change modifies\n   * @defaultValue `''`\n   */\n  key?: string | null;\n\n  /**\n   * The value of the change effect\n   * @defaultValue `''`\n   */\n  value?: string | null;\n\n  /**\n   * The modification mode with which the change is applied\n   */\n  mode?: CONST.ActiveEffectMode | null;\n\n  /**\n   * The priority level with which this change is applied\n   */\n  priority?: number | null;\n}\n\n/**\n * An embedded data structure which defines the structure of a change applied by an ActiveEffect.\n * @see ActiveEffectData\n */\nexport declare class EffectChangeData extends DocumentData<\n  EffectChangeDataSchema,\n  EffectChangeDataProperties,\n  PropertiesToSource<EffectChangeDataProperties>,\n  EffectChangeDataConstructorData,\n  BaseActiveEffect\n> {\n  static defineSchema(): EffectChangeDataSchema;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport declare interface EffectChangeData extends EffectChangeDataProperties {}\n"
    ]
  