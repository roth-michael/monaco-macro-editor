
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/clientDocuments/macro.d.ts",
      "declare global {\n  /**\n   * The client-side Macro document which extends the common BaseMacro model.\n   * Each Macro document contains MacroData which defines its data schema.\n   *\n   * @see {@link data.MacroData}              The Macro data schema\n   * @see {@link documents.Macros}            The world-level collection of Macro documents\n   * @see {@link applications.MacroConfig}    The Macro configuration application\n   *\n   * @param data - Initial data provided to construct the Macro document\n   */\n  class Macro extends ClientDocumentMixin(foundry.documents.BaseMacro) {\n    /**\n     * Is the current User the author of this macro?\n     */\n    get isAuthor(): boolean;\n\n    /**\n     * Execute the Macro command.\n     * @param scope - Provide some additional scope configuration for the Macro\n     */\n    execute(scope?: Scope): void;\n\n    /**\n     * Execute the command as a chat macro.\n     * Chat macros simulate the process of the command being entered into the Chat Log input textarea.\n     */\n    protected _executeChat({ actor, token }?: Scope): void;\n\n    /**\n     * Execute the command as a script macro.\n     * Script Macros are wrapped in an async IIFE to allow the use of asynchronous commands and await statements.\n     */\n    protected _executeScript({ actor, token }?: Scope): void;\n  }\n}\n\ninterface Scope {\n  /**\n   * An Actor who is the protagonist of the executed action\n   */\n  actor?: Actor;\n\n  /**\n   * A Token which is the protagonist of the executed action\n   */\n  token?: Token;\n}\n\nexport {};\n"
    ]
  