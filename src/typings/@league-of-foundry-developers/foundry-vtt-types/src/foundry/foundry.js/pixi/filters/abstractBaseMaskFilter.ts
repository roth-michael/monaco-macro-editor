
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/pixi/filters/abstractBaseMaskFilter.d.ts",
      "/**\n * This class defines an interface for masked custom filters\n */\ndeclare abstract class AbstractBaseMaskFilter extends PIXI.Filter {\n  /**\n   * The default vertex shader used by all instances of AbstractBaseMaskFilter\n   */\n  static vertexShader: string;\n\n  /**\n   * The fragment shader which renders this filter.\n   * A subclass of AbstractBaseMaskFilter must implement the fragmentShader(channel) static field.\n   */\n  static fragmentShader: ((channel: 'r' | 'g' | 'b') => string) | null;\n\n  /**\n   * A factory method for creating the filter using its defined default values\n   * @param defaultUniforms - Initial uniforms provided to the filter\n   *                          (default: `{}`)\n   * @param channel         - A color channel to target for masking.\n   *                          (default: `r`)\n   */\n  static create(\n    defaultUniforms?: ConstructorParameters<typeof PIXI.Filter>[2],\n    channel?: 'r' | 'g' | 'b'\n  ): AbstractBaseMaskFilter;\n\n  /**\n   * @override\n   * @param currentState - (unused)\n   */\n  apply(\n    filterManager: PIXI.systems.FilterSystem,\n    input: PIXI.RenderTexture,\n    output: PIXI.RenderTexture,\n    clear: PIXI.CLEAR_MODES,\n    currentState: any\n  ): void;\n}\n"
    ]
  