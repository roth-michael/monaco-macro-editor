
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/documents.mjs/baseChatMessage.d.ts",
      "import { DocumentMetadata } from '../abstract/document.mjs';\nimport { Document } from '../abstract/module.mjs';\nimport { BaseUser } from './baseUser';\nimport * as data from '../data/data.mjs';\n\n/**\n * The base ChatMessage model definition which defines common behavior of an ChatMessage document between both client and server.\n */\nexport declare class BaseChatMessage extends Document<data.ChatMessageData, null> {\n  static get schema(): typeof data.ChatMessageData;\n\n  static get metadata(): Merge<\n    DocumentMetadata,\n    {\n      name: 'ChatMessage';\n      collection: 'messages';\n      label: 'DOCUMENT.ChatMessage';\n      isPrimary: true;\n      permissions: {\n        create: (user: BaseUser, doc: BaseChatMessage) => boolean;\n        update: (user: BaseUser, doc: BaseChatMessage, data?: object) => boolean;\n        delete: (user: BaseUser, doc: BaseChatMessage) => boolean;\n      };\n    }\n  >;\n\n  /**\n   * Is a user able to create a new chat message?\n   */\n  protected static _canCreate(user: BaseUser, doc: BaseChatMessage): boolean;\n\n  /**\n   * Is a user able to update an existing chat message?\n   */\n  protected static _canUpdate(user: BaseUser, doc: BaseChatMessage, data?: object): boolean;\n\n  /**\n   * Is a user able to delete an existing chat message?\n   */\n  protected static _canDelete(user: BaseUser, doc: BaseChatMessage): boolean;\n}\n"
    ]
  