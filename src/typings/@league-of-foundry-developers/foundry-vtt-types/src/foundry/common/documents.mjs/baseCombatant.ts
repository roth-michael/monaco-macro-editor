
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/documents.mjs/baseCombatant.d.ts",
      "import { ConfiguredDocumentClass } from '../../../types/helperTypes';\nimport { DocumentMetadata } from '../abstract/document.mjs';\nimport { Document } from '../abstract/module.mjs';\nimport { data } from '../module.mjs';\nimport { BaseCombat } from './baseCombat';\nimport { BaseUser } from './baseUser';\n\n/**\n * The base Combatant model definition which defines common behavior of an Combatant document between both client and server.\n */\nexport declare class BaseCombatant extends Document<\n  data.CombatantData,\n  InstanceType<ConfiguredDocumentClass<typeof BaseCombat>>\n> {\n  static get schema(): typeof data.CombatantData;\n\n  static get metadata(): Merge<\n    DocumentMetadata,\n    {\n      name: 'Combatant';\n      collection: 'combatants';\n      label: 'DOCUMENT.Combatant';\n      isEmbedded: true;\n      permissions: {\n        create: 'PLAYER';\n        update: typeof BaseCombatant._canUpdate;\n      };\n    }\n  >;\n\n  /**\n   * Is a user able to update an existing Combatant?\n   * @remarks doc seems unused\n   */\n  protected static _canUpdate(user: BaseUser, doc: unknown, data?: object): boolean;\n}\n"
    ]
  