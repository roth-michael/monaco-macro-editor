
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/pixi/containers/doorControl.d.ts",
      "/**\n * An icon representing a Door Control\n */\ndeclare class DoorControl extends PIXI.Container {\n  constructor(wall: Wall);\n\n  wall: Wall;\n\n  /**\n   * Draw the DoorControl icon, displaying it's icon texture and border\n   */\n  draw(): Promise<this>;\n\n  icon?: PIXI.Sprite;\n\n  bg?: PIXI.Graphics;\n\n  border?: PIXI.Graphics;\n\n  /**\n   * Get the icon texture to use for the Door Control icon based on the door state\n   */\n  protected _getTexture(): Promise<ReturnType<typeof getTexture>>;\n\n  reposition(): void;\n\n  /**\n   * Determine whether the DoorControl is visible to the calling user's perspective.\n   * The control is always visible if the user is a GM and no Tokens are controlled.\n   * @see {@link SightLayer#testVisibility}\n   */\n  get isVisible(): boolean;\n\n  protected _onMouseOver(ev: PIXI.InteractionEvent): void;\n\n  protected _onMouseOut(ev: JQuery.Event | PIXI.InteractionEvent): void;\n\n  /**\n   * Handle left mouse down events on the door control icon.\n   * This should only toggle between the OPEN and CLOSED states.\n   */\n  protected _onMouseDown(event: PIXI.InteractionEvent): false | void;\n\n  /**\n   * Handle right mouse down events on the door control icon\n   * This should toggle whether the door is LOCKED or CLOSED\n   */\n  protected _onRightDown(event: PIXI.InteractionEvent): void;\n}\n"
    ]
  