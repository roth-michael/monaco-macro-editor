
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/searchFilter.d.ts",
      "/**\n * A controller class for managing a text input widget that filters the contents of some other UI element\n * @see {@link Application}\n */\ndeclare class SearchFilter {\n  /**\n   * @param options - Options which customize the behavior of the filter\n   */\n  constructor(options: SearchFilter.Options);\n\n  /**\n   * The value of the current query string\n   */\n  query: string;\n\n  /**\n   * A callback function to trigger when the tab is changed\n   */\n  callback: (event: KeyboardEvent, query: string, rgx: RegExp, content: string) => void;\n\n  /**\n   * The regular expression corresponding to the query that should be matched against\n   * @defaultValue `undefined`\n   */\n  rgx: RegExp | undefined;\n\n  /**\n   * The CSS selector used to target the tab navigation element\n   */\n  protected _inputSelector: string;\n\n  /**\n   * A reference to the HTML navigation element the tab controller is bound to\n   */\n  protected _input: HTMLElement | null;\n\n  /**\n   * The CSS selector used to target the tab content element\n   */\n  protected _contentSelector: string;\n\n  /**\n   * A reference to the HTML container element of the tab content\n   */\n  protected _content: HTMLElement | null;\n\n  /**\n   * A debounced function which applies the search filtering\n   */\n  protected _filter: this['callback'];\n\n  /**\n   * Bind the SearchFilter controller to an HTML application\n   */\n  bind(html: HTMLElement): void;\n\n  /**\n   * Perform a filtering of the content by invoking the callback function\n   * @param event - The triggering keyboard event\n   * @param query - The input search string\n   */\n  filter(event: KeyboardEvent, query: string): void;\n\n  /**\n   * Clean a query term to standardize it for matching.\n   * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n   * @param query - An input string which may contain leading/trailing spaces or diacritics\n   * @returns A cleaned string of ASCII characters for comparison\n   */\n  static cleanQuery(query: string): string;\n}\n\ndeclare namespace SearchFilter {\n  interface Options {\n    /**\n     * The CSS selector used to target the text input element.\n     */\n    inputSelector: string;\n\n    /**\n     * The CSS selector used to target the content container for these tabs.\n     */\n    contentSelector: string;\n\n    /**\n     * The initial value of the search query.\n     * @defaultValue `''`\n     */\n    initial?: SearchFilter['query'];\n\n    /**\n     * A callback function which executes when the filter changes.\n     */\n    callback: SearchFilter['callback'];\n\n    /**\n     * The number of milliseconds to wait for text input before processing.\n     * @defaultValue `100`\n     */\n    delay?: number;\n  }\n}\n"
    ]
  