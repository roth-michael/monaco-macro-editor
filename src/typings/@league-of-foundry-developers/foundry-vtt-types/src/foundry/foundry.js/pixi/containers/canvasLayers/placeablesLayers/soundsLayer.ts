
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/pixi/containers/canvasLayers/placeablesLayers/soundsLayer.d.ts",
      "/**\n * This Canvas Layer provides a container for AmbientSound objects.\n * @see {@link AmbientSound}\n */\ndeclare class SoundsLayer extends PlaceablesLayer<'AmbientSound', SoundsLayer.LayerOptions> {\n  /**\n   * Track whether to actively preview ambient sounds with mouse cursor movements\n   * @defaultValue `false`\n   */\n  livePreview: boolean;\n\n  /**\n   * @remarks This is not overridden in foundry but reflects the real behavior.\n   */\n  static get instance(): Canvas['sounds'];\n\n  /**\n   * @override\n   * @defaultValue\n   * ```\n   * foundry.utils.mergeObject(super.layerOptions, {\n   *  name: \"sounds\",\n   *  zIndex: 300\n   * })\n   * ```\n   * */\n  static get layerOptions(): SoundsLayer.LayerOptions;\n\n  /** @override */\n  static documentName: 'AmbientSound';\n\n  /** @override */\n  tearDown(): Promise<this>;\n\n  /**\n   * Initialize all AmbientSound sources which are present on this layer\n   */\n  initializeSources(): void;\n\n  /**\n   * Update all AmbientSound effects in the layer by toggling their playback status.\n   * Sync audio for the positions of tokens which are capable of hearing.\n   * @param options - Additional options forwarded to AmbientSound synchronization\n   *                  (defaultValue: `{}`)\n   */\n  refresh(options?: { fade?: number }): number | void;\n\n  /**\n   * Preview ambient audio for a given mouse cursor position\n   * @param position - The cursor position to preview\n   */\n  previewSound(position: Point): void;\n\n  /**\n   * Terminate playback of all ambient audio sources\n   */\n  stopAll(): void;\n\n  /**\n   * Sync the playing state and volume of all AmbientSound objects based on the position of listener points\n   * @param listeners - Locations of listeners which have the capability to hear\n   * @param options   - Additional options forwarded to AmbientSound synchronization\n   *                    (defaultValue: `{}`)\n   */\n  protected _syncPositions(listeners: Point[], options?: { fade?: number }): void;\n\n  /**\n   * Define the easing function used to map radial distance to volume.\n   * Uses cosine easing which graduates from volume 1 at distance 0 to volume 0 at distance 1\n   * @returns The target volume level\n   */\n  protected _getEasingVolume(distance: number, radius: number): number;\n\n  /**\n   * Actions to take when the darkness level of the Scene is changed\n   * @param darkness - The new darkness level\n   * @param prior    - The prior darkness level\n   */\n  protected _onDarknessChange(darkness: number, prior: number): void;\n\n  /**\n   * Handle mouse cursor movements which may cause ambient audio previews to occur\n   * @param event - The initiating mouse move interaction event\n   */\n  protected _onMouseMove(event: PIXI.InteractionEvent): void;\n\n  /** @override */\n  protected _onDragLeftStart(event: PIXI.InteractionEvent): ReturnType<AmbientSound['draw']>;\n\n  /** @override */\n  protected _onDragLeftMove(event: PIXI.InteractionEvent): void;\n\n  /** @override */\n  protected _onDragLeftDrop(event: PIXI.InteractionEvent): void;\n\n  /** @override */\n  protected _onDragLeftCancel(event: PointerEvent): void;\n\n  /**\n   * @deprecated since 0.8.2\n   */\n  update(options?: { fade?: number }): ReturnType<this['refresh']>;\n}\n\ndeclare namespace SoundsLayer {\n  interface LayerOptions extends PlaceablesLayer.LayerOptions<'AmbientSound'> {\n    name: 'sounds';\n    zIndex: 300;\n  }\n}\n"
    ]
  