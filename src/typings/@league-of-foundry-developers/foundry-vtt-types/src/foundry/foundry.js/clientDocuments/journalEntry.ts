
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/clientDocuments/journalEntry.d.ts",
      "import { DocumentDataType, DocumentModificationOptions } from '../../common/abstract/document.mjs';\n\ndeclare global {\n  /**\n   * The client-side JournalEntry document which extends the common BaseJournalEntry model.\n   * Each JournalEntry document contains JournalEntryData which defines its data schema.\n   *\n   * @see {@link data.JournalEntryData}              The JournalEntry data schema\n   * @see {@link documents.Journal}                  The world-level collection of JournalEntry documents\n   * @see {@link applications.JournalSheet}          The JournalEntry configuration application\n   *\n   * @param data - Initial data provided to construct the JournalEntry document\n   */\n  class JournalEntry extends ClientDocumentMixin(foundry.documents.BaseJournalEntry) {\n    /**\n     * A boolean indicator for whether or not the JournalEntry is visible to the current user in the directory sidebar\n     */\n    get visible(): boolean;\n\n    /**\n     * Return a reference to the Note instance for this Journal Entry in the current Scene, if any.\n     * If multiple notes are placed for this Journal Entry, only the first will be returned.\n     */\n    get sceneNote(): Note | null;\n\n    /**\n     * Show the JournalEntry to connected players.\n     * By default the entry will only be shown to players who have permission to observe it.\n     * If the parameter force is passed, the entry will be shown to all players regardless of normal permission.\n     *\n     * @param mode  - Which JournalEntry mode to display? Default is text.\n     *                (default: `'text'`)\n     * @param force - Display the entry to all players regardless of normal permissions\n     *                (default: `false`)\n     * @returns A Promise that resolves back to the shown entry once the request is processed\n     */\n    show(mode?: 'text' | 'image', force?: boolean): Promise<this>;\n\n    /**\n     * If the JournalEntry has a pinned note on the canvas, this method will animate to that note\n     * The note will also be highlighted as if hovered upon by the mouse\n     * @param options - Options which modify the pan operation\n     * @returns A Promise which resolves once the pan animation has concluded\n     */\n    panToNote(options?: PanToNoteOptions): Promise<void>;\n\n    /** @override */\n    protected _onUpdate(\n      data: DeepPartial<DocumentDataType<foundry.documents.BaseJournalEntry>>,\n      options: DocumentModificationOptions,\n      userId: string\n    ): void;\n\n    /** @override */\n    protected _onDelete(options: DocumentModificationOptions, userId: string): void;\n  }\n}\n\ninterface PanToNoteOptions {\n  /**\n   * The speed of the pan animation in milliseconds\n   * @defaultValue `250`\n   */\n  duration?: number;\n\n  /**\n   * The resulting zoom level\n   * @defaultValue `1.5`\n   */\n  scale?: number;\n}\n\nexport {};\n"
    ]
  