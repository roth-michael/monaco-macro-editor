
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/perceptionManager.d.ts",
      "/**\n * A helper class which manages the refresh workflow for perception layers on the canvas.\n * This controls the logic which batches multiple requested updates to minimize the amount of work required.\n * A singleton instance is available as canvas#perception.\n * @see Canvas#perception\n */\ndeclare class PerceptionManager {\n  constructor();\n\n  /**\n   * The number of milliseconds by which to throttle non-immediate refreshes\n   */\n  protected _throttleMS: number | undefined;\n\n  /**\n   * An internal tracker for the last time that a perception refresh was executed\n   */\n  protected _refreshTime: number | undefined;\n\n  /**\n   * An internal tracker for the window timeout that applies a debounce to the refresh\n   */\n  protected _timeout: number | undefined;\n\n  /**\n   * Cache a reference to the canvas scene to avoid attempting scheduled refreshes after the scene is changed\n   */\n  protected _scene: string | undefined;\n\n  /**\n   * The default values of update parameters.\n   * When a refresh occurs, the staged parameters are reset to these initial values.\n   */\n  static DEFAULTS: PerceptionManager.Options;\n\n  /**\n   * The configured parameters for the next refresh.\n   */\n  params: PerceptionManager.Options;\n\n  /**\n   * Cancel any pending perception refresh.\n   */\n  cancel(): void;\n\n  /**\n   * Schedule a perception update with requested parameters.\n   * @param options - (default: `{}`)\n   */\n  schedule(options?: DeepPartial<PerceptionManager.Options>): void;\n\n  /**\n   * Perform an immediate perception update.\n   * @param options - (default: `{}`)\n   */\n  update(options?: DeepPartial<PerceptionManager.Options>): void;\n\n  /**\n   * A helper function to perform an immediate initialization plus incremental refresh.\n   */\n  initialize(): ReturnType<this['update']>;\n\n  /**\n   * A helper function to perform an incremental refresh only.\n   */\n  refresh(): ReturnType<this['update']>;\n\n  /**\n   * Set option flags which configure the next perception update\n   */\n  protected _set(options: DeepPartial<PerceptionManager.Options>): void;\n\n  /**\n   * Perform the perception update workflow\n   * @param immediate - Perform the workflow immediately, otherwise it is throttled\n   *                    (default: `false`)\n   */\n  protected _update(immediate?: boolean): void;\n\n  /**\n   * Reset the values of a pending refresh back to their default states.\n   */\n  protected _reset(): void;\n}\n\ndeclare namespace PerceptionManager {\n  interface Options {\n    lighting: {\n      initialize: boolean;\n      refresh: boolean;\n    };\n    sight: {\n      initialize: boolean;\n      refresh: boolean;\n      noUpdateFog: boolean;\n      forceUpdateFog: boolean;\n    };\n    sounds: {\n      initialize: boolean;\n      refresh: boolean;\n      fade: boolean;\n    };\n    foreground: {\n      refresh: boolean;\n    };\n  }\n}\n"
    ]
  