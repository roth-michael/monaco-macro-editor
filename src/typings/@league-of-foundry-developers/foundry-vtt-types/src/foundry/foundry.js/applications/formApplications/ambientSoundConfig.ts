
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/applications/formApplications/ambientSoundConfig.d.ts",
      "/**\n * Ambient Sound Config Sheet\n * @typeParam P - the type of the options object\n */\ndeclare class AmbientSoundConfig<\n  P extends AmbientSoundConfig.Options = AmbientSoundConfig.Options\n> extends FormApplication<AmbientSoundConfig.Options, AmbientSoundConfig.Data, AmbientSound> {\n  /**\n   * @param sound   - The sound object being configured\n   * @param options - Additional application rendering options\n   */\n  constructor(sound: AmbientSound, options?: Partial<P>);\n\n  /**\n   * @override\n   * @defaultValue\n   * ```typescript\n   * mergeObject(super.defaultOptions, {\n   *   id: \"sound-config\",\n   *   classes: [\"sheet\", \"sound-sheet\"],\n   *   title: \"SOUND.ConfigTitle\",\n   *   template: \"templates/scene/sound-config.html\",\n   *   width: 480\n   * });\n   * ```\n   */\n  static get defaultOptions(): AmbientSoundConfig.Options;\n\n  /**\n   * @param options - (unused)\n   * @override\n   */\n  getData(options?: Partial<P>): AmbientSoundConfig.Data;\n\n  /**\n   * @param event - (unused)\n   * @override\n   */\n  protected _updateObject(event: Event, formData: AmbientSoundConfig.FormData): Promise<AmbientSound>;\n\n  /** @override */\n  close(options?: Application.CloseOptions): Promise<void>;\n}\n\ndeclare namespace AmbientSoundConfig {\n  interface Data {\n    object: foundry.utils.Duplicated<AmbientSoundConfig['object']['data']>;\n    options: AmbientSoundConfig['options'];\n    submitText: string;\n  }\n\n  interface FormData {\n    easing: AmbientSound.Data['easing'];\n    path: AmbientSound.Data['path'];\n    radius: AmbientSound.Data['radius'] | null;\n    type: AmbientSound.Data['type'];\n    volume: AmbientSound.Data['volume'];\n    x: AmbientSound.Data['x'] | null;\n    y: AmbientSound.Data['y'] | null;\n  }\n\n  interface Options extends FormApplication.Options {\n    /**\n     * Configure a preview version of a sound which is not yet saved\n     */\n    preview?: boolean;\n  }\n}\n"
    ]
  