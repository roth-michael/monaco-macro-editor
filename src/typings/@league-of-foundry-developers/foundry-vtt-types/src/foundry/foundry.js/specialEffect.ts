
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/specialEffect.d.ts",
      "/**\n * I don't know what this will do yet\n */\ndeclare class SpecialEffect {\n  constructor(parent: PIXI.Container, options?: DeepPartial<SpecialEffect.Options>);\n\n  parent: PIXI.Container;\n\n  options: SpecialEffect.Options;\n\n  emitters: PIXI.particles.Emitter[];\n\n  /**\n   * Use this flag as a way to pass a stop signal into the animation frame\n   */\n  protected _stop: boolean | null;\n\n  static get label(): string;\n\n  static get effectOptions(): SpecialEffect.Options;\n\n  getParticleEmitters(): PIXI.particles.Emitter[];\n\n  play(duration: number): void;\n\n  stop(): void;\n\n  protected _startEmitter(emitter: PIXI.particles.Emitter): void;\n\n  static OPTION_TYPES: {\n    VALUE: 1;\n    CHECKBOX: 2;\n    RANGE: 3;\n    SELECT: 4;\n  };\n\n  /**\n   * @defaultValue\n   * ```typescript\n   * {\n   *   maxSpeed: 0,\n   *   noRotation: false,\n   *   blendMode: 'normal',\n   *   emitterLifetime: -1,\n   *   pos: {\n   *     x: 0,\n   *     y: 0\n   *   },\n   *   spawnType: 'rect'\n   * }\n   * ```\n   */\n  static DEFAULT_CONFIG: PIXI.particles.EmitterConfig | PIXI.particles.OldEmitterConfig;\n}\n\ndeclare namespace SpecialEffect {\n  interface Options {\n    density: {\n      /**\n       * @defaultValue `'Particle Density'`\n       */\n      label: string;\n\n      /**\n       * @defaultValue `SpecialEffect.OPTION_TYPES.RANGE`\n       */\n      type: ValueOf<typeof SpecialEffect['OPTION_TYPES']>;\n\n      /**\n       * @defaultValue `0.5`\n       */\n      value: number;\n\n      /**\n       * @defaultValue `0.1`\n       */\n      min: number;\n\n      /**\n       * @defaultValue `5`\n       */\n      max: number;\n\n      /**\n       * @defaultValue `0.1`\n       */\n      step: number;\n    };\n  }\n\n  type BlendMode =\n    | 'normal'\n    | 'add'\n    | 'multiply'\n    | 'screen'\n    | 'overlay'\n    | 'darken'\n    | 'lighten'\n    | 'color_dodge'\n    | 'color_burn'\n    | 'hard_light'\n    | 'soft_light'\n    | 'difference'\n    | 'exclusion'\n    | 'hue'\n    | 'saturation'\n    | 'color'\n    | 'luminosity';\n\n  type SpawnType = 'point' | 'rect' | 'circle' | 'ring' | 'burst';\n}\n"
    ]
  