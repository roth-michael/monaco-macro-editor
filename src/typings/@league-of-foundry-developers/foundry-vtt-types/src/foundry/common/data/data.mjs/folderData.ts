
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/folderData.d.ts",
      "import DocumentData from '../../abstract/data.mjs';\nimport * as fields from '../fields.mjs';\nimport * as documents from '../../documents.mjs';\nimport { ConfiguredFlags, PropertiesToSource } from '../../../../types/helperTypes';\n\ninterface FolderDataSchema extends DocumentSchema {\n  _id: typeof fields.DOCUMENT_ID;\n  name: typeof fields.REQUIRED_STRING;\n  type: DocumentField<foundry.CONST.FolderEntityTypes> & {\n    type: String;\n    required: true;\n    validate: (t: unknown) => t is foundry.CONST.FolderEntityTypes;\n    validationError: 'Invalid Folder type provided';\n  };\n  description: typeof fields.STRING_FIELD;\n  parent: fields.ForeignDocumentField<{ type: typeof documents.BaseFolder }>;\n  sorting: DocumentField<SortingModes> & {\n    type: String;\n    required: true;\n    default: 'a';\n    validate: (mode: unknown) => mode is SortingModes;\n    validationError: 'Invalid Folder sorting mode';\n  };\n  sort: typeof fields.INTEGER_SORT_FIELD;\n  color: typeof fields.COLOR_FIELD;\n  flags: typeof fields.OBJECT_FIELD;\n}\n\ninterface FolderDataProperties {\n  /**\n   * The _id which uniquely identifies this Folder document\n   */\n  _id: string | null;\n\n  /**\n   * The name of this Folder\n   */\n  name: string;\n\n  /**\n   * The document type which this Folder contains, from CONST.FOLDER_ENTITY_TYPES\n   */\n  type: foundry.CONST.FolderEntityTypes;\n\n  /**\n   * An HTML description of the contents of this folder\n   */\n  description?: string;\n\n  /**\n   * The _id of a parent Folder which contains this Folder\n   * @defaultValue `null`\n   */\n  parent: string | null;\n\n  /**\n   * The sorting mode used to organize documents within this Folder, in [\"a\", \"m\"]\n   * @defaultValue `'a'`\n   */\n  sorting: SortingModes;\n\n  /**\n   * The numeric sort value which orders this Folder relative to its siblings\n   * @defaultValue `0`\n   */\n  sort: number;\n\n  /**\n   * A color string used for the background color of this Folder\n   */\n  color?: string | null;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags: ConfiguredFlags<'Folder'>;\n}\n\ninterface FolderDataConstructorData {\n  /**\n   * The _id which uniquely identifies this Folder document\n   */\n  _id?: string | null;\n\n  /**\n   * The name of this Folder\n   */\n  name: string;\n\n  /**\n   * The document type which this Folder contains, from CONST.FOLDER_ENTITY_TYPES\n   */\n  type: foundry.CONST.FolderEntityTypes;\n\n  /**\n   * An HTML description of the contents of this folder\n   */\n  description?: string | null;\n\n  /**\n   * The _id of a parent Folder which contains this Folder\n   * @defaultValue `null`\n   */\n  parent?: string | null;\n\n  /**\n   * The sorting mode used to organize documents within this Folder, in [\"a\", \"m\"]\n   * @defaultValue `'a'`\n   */\n  sorting?: SortingModes | null;\n\n  /**\n   * The numeric sort value which orders this Folder relative to its siblings\n   * @defaultValue `0`\n   */\n  sort?: number | null;\n\n  /**\n   * A color string used for the background color of this Folder\n   */\n  color?: string | null;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags?: ConfiguredFlags<'Folder'> | null;\n}\n\n/**\n * The data schema for a Folder document.\n */\nexport declare class FolderData extends DocumentData<\n  FolderDataSchema,\n  FolderDataProperties,\n  PropertiesToSource<FolderDataProperties>,\n  FolderDataConstructorData,\n  documents.BaseFolder\n> {\n  constructor(data: FolderDataConstructorData, document?: documents.BaseFolder | null);\n\n  static defineSchema(): FolderDataSchema;\n\n  static SORTING_MODES: ['a', 'm'];\n}\n\nexport type SortingModes = ValueOf<typeof FolderData.SORTING_MODES>;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport declare interface FolderData extends FolderDataProperties {}\n"
    ]
  