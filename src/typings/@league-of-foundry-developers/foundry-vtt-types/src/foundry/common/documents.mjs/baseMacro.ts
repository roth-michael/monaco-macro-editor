
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/documents.mjs/baseMacro.d.ts",
      "import * as data from '../data/data.mjs';\nimport { Document } from '../abstract/module.mjs';\nimport { DocumentMetadata, DocumentModificationOptions } from '../abstract/document.mjs';\nimport { BaseUser } from './baseUser';\nimport { ConstructorDataType } from '../../../types/helperTypes';\n\n/**\n * The base Macro model definition which defines common behavior of an Macro document between both client and server.\n */\nexport declare class BaseMacro extends Document<data.MacroData> {\n  static get schema(): typeof data.MacroData;\n\n  static get metadata(): Merge<\n    DocumentMetadata,\n    {\n      name: 'Macro';\n      collection: 'macros';\n      label: 'DOCUMENT.Macro';\n      isPrimary: true;\n      types: ['script', 'chat']; // TODO: Automatically infer from CONST.MACRO_TYPES\n      permissions: {\n        create: 'PLAYER';\n        update: (user: BaseUser, doc: BaseMacro, data?: object) => boolean;\n        delete: (user: BaseUser, doc: BaseMacro) => boolean;\n      };\n    }\n  >;\n\n  protected _preCreate(\n    data: ConstructorDataType<data.MacroData>,\n    options: DocumentModificationOptions,\n    user: BaseUser\n  ): Promise<void>;\n\n  /**\n   * Is a user able to update an existing Macro document?\n   */\n  protected static _canUpdate(user: BaseUser, doc: BaseMacro, data?: object): boolean;\n\n  /**\n   * Is a user able to delete an existing Macro document?\n   */\n  protected static _canDelete(user: BaseUser, doc: BaseMacro): boolean;\n}\n"
    ]
  