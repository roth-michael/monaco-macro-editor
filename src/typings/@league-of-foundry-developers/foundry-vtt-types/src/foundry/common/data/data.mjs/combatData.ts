
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/combatData.d.ts",
      "import {\n  ConfiguredDocumentClass,\n  ConfiguredFlags,\n  ConstructorDataType,\n  FieldReturnType,\n  PropertiesToSource\n} from '../../../../types/helperTypes';\nimport EmbeddedCollection from '../../abstract/embedded-collection.mjs';\nimport { DocumentData } from '../../abstract/module.mjs';\nimport * as documents from '../../documents.mjs';\nimport * as fields from '../fields.mjs';\nimport { CombatantData } from './combatantData';\n\ninterface CombatDataSchema extends DocumentSchema {\n  _id: typeof fields.DOCUMENT_ID;\n  scene: fields.ForeignDocumentField<{ type: typeof documents.BaseScene }>;\n  combatants: fields.EmbeddedCollectionField<typeof documents.BaseCombatant>;\n  active: typeof fields.BOOLEAN_FIELD;\n  round: FieldReturnType<typeof fields.NONNEGATIVE_INTEGER_FIELD, { default: 0; required: true }>;\n  turn: FieldReturnType<typeof fields.NONNEGATIVE_INTEGER_FIELD, { default: 0; required: true }>;\n  sort: typeof fields.INTEGER_SORT_FIELD;\n  flags: typeof fields.OBJECT_FIELD;\n}\n\ninterface CombatDataProperties {\n  /** The _id which uniquely identifies this Combat document */\n  _id: string | null;\n\n  /** The _id of a Scene within which this Combat occurs */\n  scene: string | null;\n\n  /** A Collection of Combatant embedded Documents */\n  combatants: EmbeddedCollection<ConfiguredDocumentClass<typeof documents.BaseCombatant>, CombatData>;\n\n  /**\n   * Is the Combat encounter currently active?\n   * @defaultValue `false`\n   */\n  active: boolean;\n\n  /**\n   * The current round of the Combat encounter\n   * @defaultValue `0`\n   */\n  round: number;\n\n  /**\n   * The current turn in the Combat round\n   * @defaultValue `0`\n   */\n  turn: number;\n\n  /**\n   * The current sort order of this Combat relative to others in the same Scene\n   * @defaultValue `0`\n   */\n  sort: number;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags: ConfiguredFlags<'Combat'>;\n}\n\ninterface CombatDataConstructorData {\n  /** The _id which uniquely identifies this Combat document */\n  _id?: string | null;\n\n  /** The _id of a Scene within which this Combat occurs */\n  scene?: string | null;\n\n  /** A Collection of Combatant embedded Documents */\n  combatants?: ConstructorDataType<CombatantData>[] | null;\n\n  /**\n   * Is the Combat encounter currently active?\n   * @defaultValue `false`\n   */\n  active?: boolean | null;\n\n  /**\n   * The current round of the Combat encounter\n   * @defaultValue `0`\n   */\n  round?: number | null;\n\n  /**\n   * The current turn in the Combat round\n   * @defaultValue `0`\n   */\n  turn?: number | null;\n\n  /**\n   * The current sort order of this Combat relative to others in the same Scene\n   * @defaultValue `0`\n   */\n  sort?: number | null;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags?: ConfiguredFlags<'Combat'> | null;\n}\n\n/**\n * The data schema for an Combat document.\n * @see BaseCombat\n */\nexport declare class CombatData extends DocumentData<\n  CombatDataSchema,\n  CombatDataProperties,\n  PropertiesToSource<CombatDataProperties>,\n  CombatDataConstructorData,\n  documents.BaseCombat\n> {\n  static defineSchema(): CombatDataSchema;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport declare interface CombatData extends CombatDataProperties {}\n"
    ]
  