
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/documents.mjs/baseFogExploration.d.ts",
      "import { ConstructorDataType } from '../../../types/helperTypes';\nimport { DocumentMetadata, DocumentModificationOptions } from '../abstract/document.mjs';\nimport { Document } from '../abstract/module.mjs';\nimport { BaseUser } from './baseUser';\nimport * as data from '../data/data.mjs';\n\n/**\n * The base FogExploration model definition which defines common behavior of an FogExploration document between both client and server.\n */\nexport declare class BaseFogExploration extends Document<data.FogExplorationData> {\n  /** @override */\n  static get schema(): typeof data.FogExplorationData;\n\n  /** @override */\n  static get metadata(): Merge<\n    DocumentMetadata,\n    {\n      name: 'FogExploration';\n      collection: 'fog';\n      label: 'DOCUMENT.FogExploration';\n      isPrimary: true;\n      permissions: {\n        create: 'PLAYER';\n        update: typeof BaseFogExploration._canUserModify;\n        delete: typeof BaseFogExploration._canUserModify;\n      };\n    }\n  >;\n\n  /** @override */\n  protected _preUpdate(\n    changed: DeepPartial<ConstructorDataType<data.FogExplorationData>>,\n    options: DocumentModificationOptions,\n    user: BaseUser\n  ): Promise<void>;\n\n  /**\n   * Test whether a User can modify a FogExploration document.\n   */\n  protected static _canUserModify(user: BaseUser, doc: BaseFogExploration): boolean;\n}\n"
    ]
  