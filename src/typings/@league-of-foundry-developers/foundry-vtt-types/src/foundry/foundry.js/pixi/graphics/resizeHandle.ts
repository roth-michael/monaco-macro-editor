
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/pixi/graphics/resizeHandle.d.ts",
      "declare class ResizeHandle extends PIXI.Graphics {\n  /**\n   * @param handlers - (default: `{}`)\n   */\n  constructor(offset: ResizeHandle['offset'], handlers?: ResizeHandle['handlers']);\n\n  offset: [widthOffset: number, heightOffset: number];\n\n  handlers: { canDrag?: boolean };\n\n  /**\n   * Track whether the handle is being actively used for a drag workflow\n   * @defaultValue `false`\n   */\n  active: boolean;\n\n  refresh(bounds: Rectangle): void;\n\n  /**\n   * @param aspectRatio - (default: `null`)\n   */\n  updateDimensions(\n    current: Rectangle,\n    origin: Rectangle,\n    destination: Rectangle,\n    { aspectRatio }?: { aspectRatio?: number | null }\n  ): Rectangle;\n\n  activateListeners(): void;\n\n  /**\n   * Handle mouse-over event on a control handle\n   * @param event - The mouseover event\n   */\n  protected _onHoverIn(event: PIXI.InteractionEvent): void;\n\n  /**\n   * Handle mouse-out event on a control handle\n   * @param event - The mouseout event\n   */\n  protected _onHoverOut(event: PIXI.InteractionEvent): void;\n\n  /**\n   * When we start a drag event - create a preview copy of the Tile for re-positioning\n   * @param event - The mousedown event\n   */\n  protected _onMouseDown(event: PIXI.InteractionEvent): void;\n}\n"
    ]
  