
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/applications/formApplications/documentSheets/itemSheet.d.ts",
      "import { ConfiguredDocumentClass } from '../../../../../types/helperTypes';\n\ndeclare global {\n  /**\n   * The Application responsible for displaying and editing a single Item document.\n   *\n   * @param item    - The Item instance being displayed within the sheet.\n   * @param options - Additional application configuration options.\n   *\n   * @typeParam Options - the type of the options object\n   * @typeParam Data    - The data structure used to render the handlebars template.\n   */\n  class ItemSheet<\n    Options extends ItemSheet.Options = ItemSheet.Options,\n    Data extends object = ItemSheet.Data<Options>\n  > extends DocumentSheet<Options, Data, InstanceType<ConfiguredDocumentClass<typeof Item>>> {\n    /**\n     * @defaultValue\n     * ```typescript\n     * foundry.utils.mergeObject(super.defaultOptions, {\n     *   template: \"templates/sheets/item-sheet.html\",\n     *   width: 500,\n     *   closeOnSubmit: false,\n     *   submitOnClose: true,\n     *   submitOnChange: true,\n     *   resizable: true,\n     *   baseApplication: \"ItemSheet\",\n     *   id: \"item\"\n     * ```\n     */\n    static get defaultOptions(): ItemSheet.Options;\n\n    /** @override */\n    get id(): string;\n\n    /** @override */\n    get title(): string;\n\n    /**\n     * A convenience reference to the Item entity\n     */\n    get item(): InstanceType<ConfiguredDocumentClass<typeof Item>>;\n\n    /**\n     * The Actor instance which owns this item. This may be null if the item is\n     * unowned.\n     */\n    get actor(): this['item']['actor'];\n\n    /**\n     * @param options - (unused)\n     * @override\n     *\n     * @remarks The implementation in {@link ItemSheet} doesn't return a\n     * `Promise` but the return type includes it to allow extending classes to\n     * do that.\n     */\n    getData(options?: Partial<Options>): Data | Promise<Data>;\n\n    /** @override */\n    protected _getHeaderButtons(): Application.HeaderButton[];\n\n    /** @override */\n    activateListeners(html: JQuery): void;\n\n    /**\n     * Handle requests to configure the default sheet used by this Item\n     */\n    protected _onConfigureSheet(event: JQuery.ClickEvent): void;\n\n    /**\n     * Handle changing the item image\n     */\n    protected _onEditImage(event: JQuery.ClickEvent): ReturnType<FilePicker['browse']>;\n  }\n\n  namespace ItemSheet {\n    /**\n     * @typeParam Options - the type of the options object\n     */\n    interface Data<Options extends ItemSheet.Options = ItemSheet.Options>\n      extends DocumentSheet.Data<InstanceType<ConfiguredDocumentClass<typeof Item>>, Options> {\n      item: this['document'];\n    }\n\n    type Options = DocumentSheet.Options;\n  }\n}\n"
    ]
  