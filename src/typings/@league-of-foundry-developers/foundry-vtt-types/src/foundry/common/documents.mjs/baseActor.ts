
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/documents.mjs/baseActor.d.ts",
      "import { DocumentMetadata, DocumentModificationOptions } from '../abstract/document.mjs';\nimport { Document } from '../abstract/module.mjs';\nimport { BaseActiveEffect } from './baseActiveEffect';\nimport { BaseItem } from './baseItem';\nimport * as data from '../data/data.mjs';\nimport { BaseUser } from './baseUser';\nimport { ConstructorDataType } from '../../../types/helperTypes';\n\n//TODO Add Token as parent class once it is available\n/**\n * The base Actor model definition which defines common behavior of an Actor document between both client and server.\n */\nexport declare class BaseActor extends Document<data.ActorData, Document<any, any>> {\n  static get schema(): typeof data.ActorData;\n\n  static get metadata(): Merge<\n    DocumentMetadata,\n    {\n      name: 'Actor';\n      collection: 'actors';\n      label: 'DOCUMENT.Actor';\n      embedded: {\n        ActiveEffect: typeof BaseActiveEffect;\n        Item: typeof BaseItem;\n      };\n      isPrimary: true;\n      hasSystemData: true;\n      permissions: {\n        create: 'ACTOR_CREATE';\n      };\n      types: string[];\n    }\n  >;\n  /*\n   * A reference to the Collection of embedded ActiveEffect instances in the Actor document, indexed by _id.\n   */\n  get effects(): this['data']['effects'];\n\n  /**\n   * A reference to the Collection of embedded Item instances in the Actor document, indexed by _id.\n   */\n  get items(): this['data']['items'];\n\n  /**\n   * Migrate the system data object to conform to data model defined by the current system version.\n   * @see mergeObject\n   * @param options - Options which customize how the system data is migrated.\n   * @returns The migrated system data object, not yet saved to the database\n   */\n  migrateSystemData(options?: MigrateSystemDataOptions): object;\n\n  /**\n   * Perform preliminary operations before a Document of this type is created.\n   * Pre-creation operations only occur for the client which requested the operation.\n   * @param data    - The initial data used to create the document\n   * @param options - Additional options which modify the creation request\n   * @param user    - The User requesting the document creation\n   */\n  protected _preCreate(\n    data: ConstructorDataType<data.ActorData>,\n    options: DocumentModificationOptions,\n    user: BaseUser\n  ): Promise<void>;\n\n  /**\n   * Perform preliminary operations before a Document of this type is updated.\n   * Pre-update operations only occur for the client which requested the operation.\n   * @param changed - The differential data that is changed relative to the documents prior values\n   * @param options - Additional options which modify the update request\n   * @param user    - The User requesting the document update\n   */\n  protected _preUpdate(\n    changed: DeepPartial<ConstructorDataType<data.ActorData>>,\n    options: DocumentModificationOptions,\n    user: BaseUser\n  ): Promise<void>;\n}\n\ninterface MigrateSystemDataOptions {\n  /**\n   * Retain keys which exist in the current data, but not the model\n   * @defaultValue `false`\n   */\n  insertKeys?: boolean;\n\n  /**\n   * Retain inner-object values which exist in the current data, but not the model\n   * @defaultValue `true`\n   */\n  insertValues?: boolean;\n\n  /**\n   * Require that data types match the model exactly to be retained\n   * @defaultValue `false`\n   */\n  enforceTypes?: boolean;\n}\n"
    ]
  