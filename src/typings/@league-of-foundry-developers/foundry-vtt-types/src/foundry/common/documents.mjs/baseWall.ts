
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/documents.mjs/baseWall.d.ts",
      "import { Context } from '../abstract/document.mjs';\nimport { ConfiguredDocumentClass, ConstructorDataType } from '../../../types/helperTypes';\nimport { DocumentMetadata } from '../abstract/document.mjs';\nimport { Document } from '../abstract/module.mjs';\nimport { BaseScene } from './baseScene';\nimport { BaseUser } from './baseUser';\nimport * as data from '../data/data.mjs';\n\n/**\n * The base Wall model definition which defines common behavior of an Wall document between both client and server.\n */\nexport declare class BaseWall extends Document<data.WallData, InstanceType<ConfiguredDocumentClass<typeof BaseScene>>> {\n  /**\n   * @remarks This is not overridden in foundry but reflects the real behavior.\n   */\n  constructor(\n    data: ConstructorDataType<data.WallData>,\n    context?: Context<InstanceType<ConfiguredDocumentClass<typeof BaseScene>>>\n  );\n\n  /** @override */\n  static get schema(): typeof data.WallData;\n\n  /** @override */\n  static get metadata(): Merge<\n    DocumentMetadata,\n    {\n      name: 'Wall';\n      collection: 'walls';\n      label: 'DOCUMENT.Wall';\n      isEmbedded: true;\n      permissions: {\n        update: typeof BaseWall._canUpdate;\n      };\n    }\n  >;\n\n  /**\n   * Is a user able to update an existing Wall?\n   */\n  protected static _canUpdate(\n    user: BaseUser,\n    doc: BaseWall,\n    data?: Partial<ConstructorDataType<data.WallData>>\n  ): boolean;\n}\n"
    ]
  