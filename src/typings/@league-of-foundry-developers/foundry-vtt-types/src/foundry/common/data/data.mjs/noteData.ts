
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/noteData.d.ts",
      "import { ConfiguredFlags, FieldReturnType, PropertiesToSource } from '../../../../types/helperTypes';\nimport DocumentData from '../../abstract/data.mjs';\nimport * as documents from '../../documents.mjs';\nimport * as fields from '../fields.mjs';\n\ninterface NoteDataSchema extends DocumentSchema {\n  _id: typeof fields.DOCUMENT_ID;\n  entryId: fields.ForeignDocumentField<{ type: typeof documents.BaseJournalEntry; required: false }>;\n  x: typeof fields.REQUIRED_NUMBER;\n  y: typeof fields.REQUIRED_NUMBER;\n  icon: FieldReturnType<\n    typeof fields.IMAGE_FIELD,\n    {\n      required: true;\n      default: typeof CONST.DEFAULT_NOTE_ICON;\n    }\n  >;\n  iconSize: FieldReturnType<\n    typeof fields.REQUIRED_NUMBER,\n    {\n      default: 40;\n      validate: (n: unknown) => n is number;\n      validationError: 'Invalid {name} {field} which must be an integer greater than 32';\n    }\n  >;\n  iconTint: typeof fields.COLOR_FIELD;\n  text: typeof fields.STRING_FIELD;\n  fontFamily: FieldReturnType<\n    typeof fields.REQUIRED_STRING,\n    {\n      default: () => typeof CONFIG['defaultFontFamily'];\n    }\n  >;\n  fontSize: FieldReturnType<\n    typeof fields.REQUIRED_NUMBER,\n    {\n      default: 48;\n      validate: (n: unknown) => n is number;\n      validationError: 'Invalid {name} {field} which must be an integer between 8 and 128';\n    }\n  >;\n  textAnchor: DocumentField<number> & {\n    type: typeof Number;\n    required: true;\n    default: typeof CONST.TEXT_ANCHOR_POINTS.BOTTOM;\n    validate: (p: unknown) => p is foundry.CONST.TextAnchorPoint;\n    validationError: 'Invalid {name} {field} which must be a value in CONST.TEXT_ANCHOR_POINTS';\n  };\n  textColor: FieldReturnType<typeof fields.COLOR_FIELD, { default: '#FFFFFF' }>;\n  flags: typeof fields.OBJECT_FIELD;\n}\n\ninterface NoteDataProperties {\n  /**\n   * The _id which uniquely identifies this BaseNote embedded document\n   */\n  _id: string | null;\n\n  /**\n   * The _id of a JournalEntry document which this Note represents\n   * @defaultValue `null`\n   */\n  entryId: string | null;\n\n  /**\n   * The x-coordinate position of the center of the note icon\n   * @defaultValue `0`\n   */\n  x: number;\n\n  /**\n   * The y-coordinate position of the center of the note icon\n   * @defaultValue `0`\n   */\n  y: number;\n\n  /**\n   * An image icon path used to represent this note\n   */\n  icon: string | null;\n\n  /**\n   * The pixel size of the map note icon\n   * @defaultValue `40`\n   */\n  iconSize: number;\n\n  /**\n   * An optional color string used to tint the map note icon\n   */\n  iconTint: string | null | undefined;\n\n  /**\n   * Optional text which overrides the title of the linked Journal Entry\n   */\n  text: string | undefined;\n\n  /**\n   * The font family used to display the text label on this note\n   * @defaultValue `CONFIG?.defaultFontFamily || \"Signika\"`\n   */\n  fontFamily: string;\n\n  /**\n   * The font size used to display the text label on this note\n   * @defaultValue `48`\n   */\n  fontSize: number;\n\n  /**\n   * A value in CONST.TEXT_ANCHOR_POINTS which defines where the text label anchors\n   * to the note icon.\n   * @defaultValue `CONST.TEXT_ANCHOR_POINTS.BOTTOM`\n   */\n  textAnchor: foundry.CONST.TextAnchorPoint;\n\n  /**\n   * The string that defines the color with which the note text is rendered\n   * @defaultValue `#FFFFFF`\n   */\n  textColor: string | null;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags: ConfiguredFlags<'Note'>;\n}\n\ninterface NoteDataConstructorData {\n  /**\n   * The _id which uniquely identifies this BaseNote embedded document\n   */\n  _id?: string | null;\n\n  /**\n   * The _id of a JournalEntry document which this Note represents\n   * @defaultValue `null`\n   */\n  entryId?: string | null;\n\n  /**\n   * The x-coordinate position of the center of the note icon\n   * @defaultValue `0`\n   */\n  x?: number | null;\n\n  /**\n   * The y-coordinate position of the center of the note icon\n   * @defaultValue `0`\n   */\n  y?: number | null;\n\n  /**\n   * An image icon path used to represent this note\n   */\n  icon?: string | null;\n\n  /**\n   * The pixel size of the map note icon\n   * @defaultValue `40`\n   */\n  iconSize?: number | null;\n\n  /**\n   * An optional color string used to tint the map note icon\n   */\n  iconTint?: string | null;\n\n  /**\n   * Optional text which overrides the title of the linked Journal Entry\n   */\n  text?: string | null;\n\n  /**\n   * The font family used to display the text label on this note\n   * @defaultValue `CONFIG?.defaultFontFamily || \"Signika\"`\n   */\n  fontFamily?: string | null;\n\n  /**\n   * The font size used to display the text label on this note\n   * @defaultValue `48`\n   */\n  fontSize?: number | null;\n\n  /**\n   * A value in CONST.TEXT_ANCHOR_POINTS which defines where the text label anchors\n   * to the note icon.\n   * @defaultValue `CONST.TEXT_ANCHOR_POINTS.BOTTOM`\n   */\n  textAnchor?: foundry.CONST.TextAnchorPoint | null;\n\n  /**\n   * The string that defines the color with which the note text is rendered\n   * @defaultValue `#FFFFFF`\n   */\n  textColor?: string | null;\n\n  /**\n   * An object of optional key/value flags\n   * @defaultValue `{}`\n   */\n  flags?: ConfiguredFlags<'Note'> | null;\n}\n\n/**\n * The data schema for a Note embedded document.\n * @see BaseNote\n */\nexport declare class NoteData extends DocumentData<\n  NoteDataSchema,\n  NoteDataProperties,\n  PropertiesToSource<NoteDataProperties>,\n  NoteDataConstructorData,\n  documents.BaseNote\n> {\n  static defineSchema(): NoteDataSchema;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport declare interface NoteData extends NoteDataProperties {}\n"
    ]
  