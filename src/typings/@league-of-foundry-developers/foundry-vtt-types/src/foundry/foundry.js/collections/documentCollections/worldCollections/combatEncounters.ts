
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/collections/documentCollections/worldCollections/combatEncounters.d.ts",
      "import { ConfiguredDocumentClass } from '../../../../../types/helperTypes';\n\ndeclare global {\n  /**\n   * The singleton collection of Combat documents which exist within the active World.\n   * This Collection is accessible within the Game object as game.combats.\n   *\n   * @see {@link Combat} The Combat entity\n   * @see {@link CombatTracker} The CombatTracker sidebar directory\n   */\n  class CombatEncounters extends WorldCollection<typeof foundry.documents.BaseCombat, 'CombatEncounters'> {\n    /** @override */\n    static documentName: 'Combat';\n\n    /**\n     * Provide the settings object which configures the Combat entity\n     */\n    static get settings(): ClientSettings.Values[`core.${typeof Combat['CONFIG_SETTING']}`];\n\n    /**\n     * Get an Array of Combat instances which apply to the current canvas scene\n     */\n    get combats(): ReturnType<this['filter']>;\n\n    /**\n     * The currently active Combat instance\n     */\n    get active(): ReturnType<this['find']>;\n\n    /**\n     * The currently viewed Combat encounter\n     */\n    get viewed(): StoredDocument<InstanceType<ConfiguredDocumentClass<typeof foundry.documents.BaseCombat>>> | null;\n\n    /**\n     * When a Token is deleted, remove it as a combatant from any combat encounters which included the Token\n     * @param sceneId - The Scene id within which a Token is being deleted\n     * @param tokenId - The Token id being deleted\n     */\n    protected _onDeleteToken(sceneId: string, tokenId: string): Promise<void>;\n  }\n}\n"
    ]
  