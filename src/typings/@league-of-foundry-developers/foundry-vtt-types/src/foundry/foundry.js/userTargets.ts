
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/userTargets.d.ts",
      "import { ConfiguredDocumentClass } from '../../types/helperTypes';\nimport { ObjectClass } from '../../types/helperTypes';\n\ninterface SetReplacementMembers<T> {\n  add(value: T): void;\n  delete(value: T): void;\n  clear(): void;\n}\n\ntype PatchedSet<T> = Omit<Set<T>, 'add' | 'delete' | 'clear'> & SetReplacementMembers<T>;\n\ninterface PatchedSetConstructor {\n  new <T = any>(values?: readonly T[] | null): PatchedSet<T>;\n  readonly prototype: PatchedSet<any>;\n}\n\ndeclare const Set: PatchedSetConstructor;\n\ndeclare global {\n  /**\n   * A subclass of Set which manages the Token ids which the User has targeted.\n   * @see User#targets\n   */\n  class UserTargets extends Set<InstanceType<ObjectClass<typeof TokenDocument>>> {\n    constructor(user: UserTargets['user']);\n\n    user: InstanceType<ConfiguredDocumentClass<typeof User>>;\n\n    /**\n     * Return the Token IDs which are user targets\n     */\n    get ids(): string[];\n\n    /**\n     * @override\n     * @remarks Returns void, but Set<T>.add returns boolean\n     */\n    add(token: InstanceType<ObjectClass<typeof TokenDocument>>): void;\n\n    /** @override */\n    clear(): void;\n\n    /**\n     * @override\n     * @remarks Returns void, but Set<T>.delete returns boolean\n     */\n    delete(token: InstanceType<ObjectClass<typeof TokenDocument>>): void;\n\n    /**\n     * Dispatch the targetToken hook whenever the user's target set changes\n     */\n    protected _hook(token: InstanceType<ObjectClass<typeof TokenDocument>>, targeted: boolean): void;\n  }\n}\n"
    ]
  