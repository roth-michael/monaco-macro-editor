
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/tabs.d.ts",
      "declare interface TabsConfiguration {\n  /**\n   * The CSS selector used to target the navigation element for these tabs\n   */\n  navSelector: string;\n\n  /**\n   * The CSS selector used to target the content container for these tabs\n   */\n  contentSelector?: string;\n\n  /**\n   * The tab name of the initially active tab\n   */\n  initial?: string;\n\n  /**\n   * An optional callback function that executes when the active tab is changed\n   */\n  callback?: ((event: MouseEvent | null, tabs: Tabs, tabName: string) => unknown) | null;\n}\n\n/**\n * A controller class for managing tabbed navigation within an Application instance.\n * @see {@link Application}\n *\n * @example\n * ```html\n * <!-- Example HTML -->\n * <nav class=\"tabs\" data-group=\"primary-tabs\">\n *   <a class=\"item\" data-tab=\"tab1\">Tab 1</li>\n *   <a class=\"item\" data-tab=\"tab2\">Tab 2</li>\n * </nav>\n *\n * <section class=\"content\">\n *   <div class=\"tab\" data-tab=\"tab1\" data-group=\"primary-tabs\">Content 1</div>\n *   <div class=\"tab\" data-tab=\"tab2\" data-group=\"primary-tabs\">Content 2</div>\n * </section>\n * ```\n * @example\n * ```typescript\n * // JavaScript\n * const tabs = new Tabs({navSelector: \".tabs\", contentSelector: \".content\", initial: \"tab1\"});\n * tabs.bind(html);\n * ```\n */\ndeclare class Tabs {\n  /**\n   * @param config - The Tabs Configuration to use for this tabbed container\n   */\n  constructor(config: TabsConfiguration);\n\n  /**\n   * The value of the active tab\n   */\n  active: TabsConfiguration['initial'];\n\n  /**\n   * A callback function to trigger when the tab is changed\n   */\n  callback: TabsConfiguration['callback'];\n\n  /**\n   * The CSS selector used to target the tab navigation element\n   */\n  protected _navSelector: TabsConfiguration['navSelector'];\n\n  /**\n   * A reference to the HTML navigation element the tab controller is bound to\n   * @defaultValue `null`\n   */\n  protected _nav: HTMLElement | null;\n\n  /**\n   * The CSS selector used to target the tab content element\n   */\n  protected _contentSelector: TabsConfiguration['contentSelector'];\n\n  /**\n   * A reference to the HTML container element of the tab content\n   * @defaultValue `null`\n   */\n  protected _content: HTMLElement | null;\n\n  /**\n   * Bind the Tabs controller to an HTML application\n   */\n  bind(html: HTMLElement): void;\n\n  /**\n   * Activate a new tab by name\n   * @param triggerCallback - (default: `false`)\n   */\n  activate(tabName: string, { triggerCallback }?: { triggerCallback?: boolean }): void;\n\n  /**\n   * Handle click events on the tab navigation entries\n   * @param event - A left click event\n   */\n  protected _onClickNav(event: MouseEvent): void;\n}\n\ndeclare const TabsV2: typeof Tabs;\n"
    ]
  