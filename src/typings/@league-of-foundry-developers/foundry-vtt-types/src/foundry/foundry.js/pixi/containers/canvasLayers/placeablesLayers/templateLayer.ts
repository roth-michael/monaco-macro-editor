
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/pixi/containers/canvasLayers/placeablesLayers/templateLayer.d.ts",
      "/**\n * This Canvas Layer provides a container for MeasuredTemplate objects.\n * @see {@link MeasuredTemplate}\n */\ndeclare class TemplateLayer extends PlaceablesLayer<'MeasuredTemplate', TemplateLayer.LayerOptions> {\n  /**\n   * @remarks This is not overridden in foundry but reflects the real behavior.\n   */\n  static get instance(): Canvas['templates'];\n\n  /**\n   * @override\n   * @defaultValue\n   * ```\n   * mergeObject(super.layerOptions, {\n   *   name: \"templates\",\n   *   canDragCreate: true,\n   *   rotatableObjects: true,\n   *   sortActiveTop: true,\n   *   zIndex: 50\n   * })\n   * ```\n   */\n  static get layerOptions(): TemplateLayer.LayerOptions;\n\n  /** @override */\n  static documentName: 'MeasuredTemplate';\n\n  /** @override */\n  activate(): this;\n\n  /** @override */\n  deactivate(): this;\n\n  /**\n   * Register game settings used by the TemplatesLayer\n   */\n  static registerSettings(): void;\n\n  /** @override */\n  protected _onDragLeftStart(event: PIXI.InteractionEvent): Promise<MeasuredTemplate>;\n\n  /** @override */\n  protected _onDragLeftMove(event: PIXI.InteractionEvent): void;\n\n  /**\n   * @override\n   */\n  protected _onMouseWheel(event: WheelEvent): void | ReturnType<MeasuredTemplate['rotate']>;\n}\n\ndeclare namespace TemplateLayer {\n  interface LayerOptions extends PlaceablesLayer.LayerOptions<'MeasuredTemplate'> {\n    name: 'templates';\n    canDragCreate: true;\n    rotatableObjects: true;\n    sortActiveTop: true;\n    zIndex: 50;\n  }\n}\n"
    ]
  