
    export default [
      "@league-of-foundry-developers/foundry-vtt-types/src/foundry/foundry.js/applications/formApplications/noteConfig.d.ts",
      "// TODO: Remove when updating this class!!!\n// eslint-disable-next-line\n// @ts-nocheck\n\n/**\n * Placeable Note configuration sheet\n * @typeParam P - the type of the options object\n */\ndeclare class NoteConfig<P extends FormApplication.Options = FormApplication.Options> extends FormApplication<\n  P,\n  NoteConfig.Data,\n  Note\n> {\n  /**\n   * @param note    - The Note object for which settings are being configured\n   * @param options - Additional Application options\n   */\n  constructor(note: Note, options?: Partial<P>);\n\n  /**\n   * @override\n   * @defaultValue\n   * ```typescript\n   * mergeObject(super.defaultOptions, {\n   *   id: \"note-config\",\n   *   title: game.i18n.localize(\"NOTE.ConfigTitle\"),\n   *   template: \"templates/scene/note-config.html\",\n   *   width: 400\n   * });\n   * ```\n   */\n  static get defaultOptions(): typeof FormApplication['defaultOptions'];\n\n  /**\n   * @param options - (unused)\n   * @override\n   */\n  getData(options?: Partial<P>): NoteConfig.Data;\n\n  /**\n   * @param event - (unused)\n   * @override\n   */\n  protected _updateObject(event: Event, formData: NoteConfig.FormData): Promise<Note>;\n\n  /**\n   * @override\n   */\n  close(options?: Application.CloseOptions): Promise<void>;\n}\n\ndeclare namespace NoteConfig {\n  interface Data {\n    entryIcons: typeof CONFIG.JournalEntry['noteIcons'];\n    entryId: JournalEntry['_id'] | undefined;\n    entryName: JournalEntry['name'] | undefined;\n    entries: Journal['entities'];\n    fontFamilies: Partial<Record<string, string>>;\n    object: foundry.utils.Duplicated<NoteConfig['object']['data']>;\n    options: NoteConfig['options'];\n    textAnchors: Record<foundry.CONST.TextAnchorPoint, string>;\n  }\n\n  interface FormData {\n    entryId: Note.Data['entryId'];\n    fontFamily: Note.Data['fontFamily'];\n    fontSize: Note.Data['fontSize'] | null;\n    icon: Note.Data['icon'];\n    iconSize: Note.Data['iconSize'] | null;\n    iconTint: Note.Data['iconTint'];\n    text: Note.Data['text'];\n    textAnchor: Note.Data['textAnchor'];\n    textColor: Note.Data['textColor'];\n    x: Note.Data['x'] | null;\n    y: Note.Data['y'] | null;\n  }\n}\n"
    ]
  